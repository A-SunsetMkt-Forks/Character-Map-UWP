<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddToCollectionHint.Text" xml:space="preserve">
    <value>Add to Library</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Character Map</value>
  </data>
  <data name="BlackFill.Text" xml:space="preserve">
    <value>Black Fill</value>
  </data>
  <data name="BtnCopy.Text" xml:space="preserve">
    <value>Copy (character only)</value>
  </data>
  <data name="BtnSavePng.Text" xml:space="preserve">
    <value>Save as PNG</value>
  </data>
  <data name="BtnSaveSvg.Text" xml:space="preserve">
    <value>Save as SVG (monochrome only)</value>
  </data>
  <data name="BtnSelect.Content" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="CharsLabel.Text" xml:space="preserve">
    <value>Char(s)</value>
  </data>
  <data name="ColoredGlyphLabel.Text" xml:space="preserve">
    <value>Colorization</value>
  </data>
  <data name="ColorGlyphToggle.OffContent" xml:space="preserve">
    <value>Monochrome glyphs</value>
  </data>
  <data name="ColorGlyphToggle.OnContent" xml:space="preserve">
    <value>Color glyphs</value>
  </data>
  <data name="DigSettings.Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="FilterAllFonts.Content" xml:space="preserve">
    <value>All Fonts</value>
  </data>
  <data name="FilterImportedFonts.Content" xml:space="preserve">
    <value>Imported Fonts</value>
  </data>
  <data name="FilterSymbolFonts.Content" xml:space="preserve">
    <value>Symbol Fonts</value>
  </data>
  <data name="FontDisplayHeader.Text" xml:space="preserve">
    <value>Font Display Options</value>
  </data>
  <data name="FontOptionsButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Font Rendering Options</value>
  </data>
  <data name="FontPropertiesButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Font Face Properties</value>
  </data>
  <data name="FontPropFace.Text" xml:space="preserve">
    <value>Face Name</value>
  </data>
  <data name="FontPropFamily.Text" xml:space="preserve">
    <value>Family Name</value>
  </data>
  <data name="FontPropMonospaced.Text" xml:space="preserve">
    <value>Is Monospaced</value>
  </data>
  <data name="FontPropStretch.Text" xml:space="preserve">
    <value>Stretch</value>
  </data>
  <data name="FontPropStyle.Text" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="FontPropSymbol.Text" xml:space="preserve">
    <value>Is Symbol Font</value>
  </data>
  <data name="FontPropTitle.Text" xml:space="preserve">
    <value>Font Face Properties</value>
  </data>
  <data name="FontPropType.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="FontPropWeight.Text" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="GridSlider.Header" xml:space="preserve">
    <value>Character Grid Size</value>
  </data>
  <data name="InvalidFontMessage" xml:space="preserve">
    <value>Sorry, we couldn't find any supported font data in this file.</value>
  </data>
  <data name="InvalidFontTitle" xml:space="preserve">
    <value>Unsupported File</value>
  </data>
  <data name="OpenInNewWindow.Text" xml:space="preserve">
    <value>Open in New Window</value>
  </data>
  <data name="PngSlider.Header" xml:space="preserve">
    <value>PNG Resolution (pixel)</value>
  </data>
  <data name="RemoveFontFlyout.Text" xml:space="preserve">
    <value>Delete Font Family</value>
  </data>
  <data name="RestartButton.Content" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="RestartHeader.Text" xml:space="preserve">
    <value>Requires application restart to take effect.</value>
  </data>
  <data name="SearchBox.PlaceholderText" xml:space="preserve">
    <value>Search character name or unicode hex</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>About this application</value>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>This App is designed to replace Windows system win32 character map. It is more DPI aware on high DPI screens.</value>
  </data>
  <data name="ToggleSymbolFontsOnly.OffContent" xml:space="preserve">
    <value>All Fonts</value>
  </data>
  <data name="ToggleSymbolFontsOnly.OnContent" xml:space="preserve">
    <value>Show Symbol Fonts Only</value>
  </data>
  <data name="TxtCopiedMessage.Text" xml:space="preserve">
    <value>Copied</value>
  </data>
  <data name="TxtFontIcon.Header" xml:space="preserve">
    <value>Font Icon</value>
  </data>
  <data name="TxtSymbolIcon.Header" xml:space="preserve">
    <value>Symbol Icon</value>
  </data>
  <data name="TxtTitle.Text" xml:space="preserve">
    <value>Character Map</value>
  </data>
  <data name="TxtUnicode.Header" xml:space="preserve">
    <value>Unicode</value>
  </data>
  <data name="TxtXamlCode.Header" xml:space="preserve">
    <value>XAML Code</value>
  </data>
  <data name="TypographyVariantsHeader.Text" xml:space="preserve">
    <value>Glyph Variants</value>
  </data>
  <data name="WeightSelector.Header" xml:space="preserve">
    <value>Variants</value>
  </data>
  <data name="WhiteFill.Text" xml:space="preserve">
    <value>White Fill</value>
  </data>
  <data name="FontsCountLabel.Text" xml:space="preserve">
    <value>Fonts</value>
  </data>
  <data name="ImportNotAFile" xml:space="preserve">
    <value>Not a file</value>
  </data>
  <data name="ImportPendingDelete" xml:space="preserve">
    <value>Existing font pending delete. Please restart app.</value>
  </data>
  <data name="ImportUnavailableFile" xml:space="preserve">
    <value>File not available</value>
  </data>
  <data name="ImportUnsupportedFileType" xml:space="preserve">
    <value>Unsupported File Type</value>
  </data>
  <data name="ImportUnsupportedFontType" xml:space="preserve">
    <value>Unsupported Font Type</value>
  </data>
  <data name="FontsClearedOnNextLaunchNotice" xml:space="preserve">
    <value>Some fonts could not be completely removed right now. These fonts will not show in the application and will be completely removed next time the app is launched.</value>
  </data>
  <data name="SaveImageError" xml:space="preserve">
    <value>Sorry, something went wrong whilst we were trying to save the image.</value>
  </data>
  <data name="LoadingFontListError" xml:space="preserve">
    <value>Error Loading Font List</value>
  </data>
  <data name="NoticeLabel.Text" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="ImportFileCopyFail" xml:space="preserve">
    <value>Something went wrong. Please try again later.</value>
  </data>
  <data name="ImportFontHelpBlock.Text" xml:space="preserve">
    <value>Drag fonts into the app to copy them to your library.</value>
  </data>
  <data name="FontPropXaml.Text" xml:space="preserve">
    <value>XAML FontFamily Source</value>
  </data>
  <data name="FilePickerConfirm" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportFontsButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Import Fonts</value>
  </data>
  <data name="OpenFontButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Open Font</value>
  </data>
  <data name="OpenFontPickerConfirm" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="CreateCollectionEntryBox.Header" xml:space="preserve">
    <value>Collection Name</value>
  </data>
  <data name="DigCreateCollection.PrimaryButtonText" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DigCreateCollection.Title" xml:space="preserve">
    <value>Create Collection</value>
  </data>
  <data name="DeleteCollectionButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Delete Collection</value>
  </data>
  <data name="DigCreateCollection.SecondaryButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DigDeleteCollection.PrimaryButtonText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DigDeleteCollection.SecondaryButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DigDeleteCollection.Title" xml:space="preserve">
    <value>Are you sure you want to delete this collection?</value>
  </data>
  <data name="DigRenameCollection.PrimaryButtonText" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="DigRenameCollection.SecondaryButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DigRenameCollection.Title" xml:space="preserve">
    <value>Rename Collection</value>
  </data>
  <data name="OptionAllFonts.Text" xml:space="preserve">
    <value>All Fonts</value>
  </data>
  <data name="OptionImportedFonts.Text" xml:space="preserve">
    <value>Imported Fonts</value>
  </data>
  <data name="OptionSymbolFonts.Text" xml:space="preserve">
    <value>Symbol Fonts</value>
  </data>
  <data name="RenameCollectionButton.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Rename Collection</value>
  </data>
  <data name="FontListDisplayHeader.Text" xml:space="preserve">
    <value>Fonts List Display</value>
  </data>
  <data name="FontListDisplayToggle.OffContent" xml:space="preserve">
    <value>Show Font names using System default font</value>
  </data>
  <data name="FontListDisplayToggle.OnContent" xml:space="preserve">
    <value>Show Font names using actual font</value>
  </data>
  <data name="FontPropCount.Text" xml:space="preserve">
    <value>Glyph Count</value>
  </data>
  <data name="OptionMonospacedFonts.Text" xml:space="preserve">
    <value>Monospaced Fonts</value>
  </data>
  <data name="OptionSansSerifFonts.Text" xml:space="preserve">
    <value>Sans Serif Fonts</value>
  </data>
  <data name="OptionSerifFonts.Text" xml:space="preserve">
    <value>Serif Fonts</value>
  </data>
  <data name="NewCollectionItem.Text" xml:space="preserve">
    <value>New Collection</value>
  </data>
  <data name="RemoveFromCollectionItem.Text" xml:space="preserve">
    <value>Remove from Collection</value>
  </data>
  <data name="AddToCollectionFlyout.Text" xml:space="preserve">
    <value>Add to Collection</value>
  </data>
  <data name="InstantSearchToggle.OffContent" xml:space="preserve">
    <value>Instant search disabled</value>
  </data>
  <data name="InstantSearchToggle.OnContent" xml:space="preserve">
    <value>Instant search enabled</value>
  </data>
  <data name="SearchResultsSlider.Header" xml:space="preserve">
    <value>Maximum search results</value>
  </data>
</root>