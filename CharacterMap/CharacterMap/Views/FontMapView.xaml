<views:ViewBase
    x:Class="CharacterMap.Views.FontMapView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CharacterMap.Controls"
    xmlns:core="using:CharacterMap.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:CharacterMap.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:views="using:CharacterMap.Views"
    d:DesignHeight="800"
    d:DesignWidth="1280"
    SizeChanged="UserControl_SizeChanged"
    mc:Ignorable="d">

    <Grid
        x:Name="LayoutRoot"
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        DataContext="{x:Bind ViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{StaticResource TitleRowGridHeight}" />
            <RowDefinition Height="*" />
            <RowDefinition Height="{StaticResource StatusBarGridHeight}" />
        </Grid.RowDefinitions>

        <controls:XamlTitleBar
            x:Name="TitleBar"
            x:Load="{x:Bind IsStandalone}"
            Canvas.ZIndex="101" />

        <!--  Title row  -->
        <Grid
            x:Name="TitleGrid"
            Grid.RowSpan="2"
            Canvas.ZIndex="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{StaticResource TitleRowGridHeight}" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <!--  Left Content  -->
                <ColumnDefinition Width="Auto" />
                <!--  Font Name  -->
                <ColumnDefinition Width="*" />
                <!--  Font Import Button (Standalone Window)  -->
                <ColumnDefinition Width="Auto" />
                <!--  Search Box  -->
                <ColumnDefinition Width="Auto" />
                <!--  Right Content  -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border
                x:Name="TitleBarSpacer"
                x:Load="{x:Bind IsStandalone}"
                Grid.ColumnSpan="10"
                Height="{x:Bind TitleBar.Height, Mode=OneWay}" />

            <ContentPresenter Grid.Row="1" Content="{x:Bind TitleLeftContent, Mode=OneWay}" />

            <TextBlock
                x:Name="FontTitleBlock"
                x:FieldModifier="public"
                Grid.Row="1"
                Grid.Column="1"
                Margin="24 0 8 0"
                VerticalAlignment="Center"
                FontSize="22"
                FontWeight="Bold"
                Loaded="{x:Bind helpers:Composition.SetStandardReposition}"
                Text="{Binding SelectedFont.Name}"
                TextTrimming="CharacterEllipsis"
                ToolTipService.ToolTip="{Binding SelectedFont.Name}" />

            <Button
                Grid.Row="1"
                Grid.Column="2"
                Height="{StaticResource TitleRowHeight}"
                Padding="12,0"
                HorizontalAlignment="Right"
                Click="{x:Bind ViewModel.ImportFile}"
                IsEnabled="{Binding ImportButtonEnabled}"
                Style="{ThemeResource TransparentButton}"
                Visibility="{x:Bind ViewModel.IsExternalFile}">
                <Grid ColumnSpacing="12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <FontIcon Glyph="&#xE109;" />
                    <TextBlock
                        x:Uid="AddToCollectionHint"
                        Grid.Column="1"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </Button>

            <AutoSuggestBox
                x:Name="SearchBox"
                x:Uid="SearchBox"
                x:FieldModifier="public"
                Grid.Row="1"
                Grid.Column="3"
                Width="290"
                Margin="6 0 6 0"
                VerticalAlignment="Center"
                GotFocus="SearchBox_GotFocus"
                ItemTemplate="{StaticResource SearchResultTemplate}"
                ItemsSource="{x:Bind ViewModel.SearchResults, Mode=OneWay}"
                PlaceholderText="#SearchBox"
                PreviewKeyDown="SearchBox_PreviewKeyDown"
                QuerySubmitted="SearchBox_QuerySubmitted"
                SuggestionChosen="SearchBox_SuggestionChosen"
                Tag="{x:Bind ViewModel.FontFamily, Mode=OneWay}"
                Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                TextChanged="SearchBox_TextChanged"
                TextMemberPath="Description"
                UpdateTextOnSelect="False">
                <AutoSuggestBox.QueryIcon>
                    <SymbolIcon Symbol="Find" />
                </AutoSuggestBox.QueryIcon>
            </AutoSuggestBox>

            <ContentPresenter
                Grid.Row="1"
                Grid.Column="4"
                Content="{x:Bind TitleRightContent, Mode=OneWay}" />

        </Grid>

        <!--  Main UI Grid  -->
        <Grid
            x:Name="MainUIGrid"
            Grid.Row="2"
            Grid.Column="1"
            Canvas.ZIndex="-1">
            <Grid.Resources>
                <Storyboard x:Name="BorderFadeInStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BorderCopiedMessage" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                        <LinearDoubleKeyFrame KeyTime="0:0:1.6" Value="1" />
                        <LinearDoubleKeyFrame KeyTime="0:0:2.2" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Grid.Resources>

            <!--  Char Grid  Background="#141414"  -->
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="250" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition
                        x:Name="PreviewColumn"
                        Width="328"
                        MinWidth="125" />
                </Grid.ColumnDefinitions>

                <Rectangle
                    x:Name="ShadowTarget"
                    Grid.RowSpan="2"
                    Grid.ColumnSpan="3"
                    Fill="Transparent"
                    Stretch="UniformToFill"
                    StrokeThickness="0" />

                <!--  Character Grid  -->
                <Grid x:Name="MapContainer" x:FieldModifier="public">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid
                        x:Name="CharGridHeader"
                        x:FieldModifier="public"
                        ColumnSpacing="12"
                        Margin="12 0 12 12"
                        VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <toolkit:WrapPanel
                            x:Name="OptionsPanel"
                            Orientation="Horizontal"
                            HorizontalSpacing="12"
                            ChildrenTransitions="{StaticResource RepositionTransitions}">

                            <ComboBox
                                x:Name="WeightSelector"
                                MinWidth="160"
                                IsEnabled="{Binding SelectedFont.HasVariants}"
                                ItemsSource="{Binding SelectedFont.Variants}"
                                SelectedItem="{Binding SelectedVariant, Mode=TwoWay}" />

                            <Button
                                x:Name="FontPropertiesButton"
                                x:Uid="FontPropertiesButton"
                                Height="44"
                                VerticalAlignment="Bottom"
                                Style="{ThemeResource TransparentHintButton}">
                                <FontIcon
                                    Margin="0,0,-2,0"
                                    Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                                    Glyph="&#xE946;" />
                                <Button.Flyout>
                                    <Flyout Opened="InfoFlyout_Opened">
                                        <StackPanel
                                            MinWidth="300"
                                            MaxWidth="400"
                                            Padding="12"
                                            Spacing="12">
                                            <Panel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Opacity" Value="0.5" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalAlignment" Value="Top" />
                                                </Style>
                                                <Style x:Key="Value" TargetType="TextBlock">
                                                    <Setter Property="Opacity" Value="1" />
                                                    <Setter Property="Grid.Column" Value="1" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalAlignment" Value="Top" />
                                                </Style>
                                            </Panel.Resources>
                                            <TextBlock x:Uid="FontPropTitle" FontWeight="Bold" />
                                            <Grid RowSpacing="8">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>


                                                <TextBlock x:Uid="FontPropFamily" Grid.Row="0" />
                                                <TextBlock
                                                    Grid.Row="0"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedFont.Name}" />

                                                <TextBlock x:Uid="FontPropFace" Grid.Row="1" />
                                                <TextBlock
                                                    Grid.Row="1"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.PreferredName}" />

                                                <TextBlock x:Uid="FontPropCharCount" Grid.Row="2" />
                                                <TextBlock
                                                    Grid.Row="2"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind ViewModel.SelectedVariant.Characters.Count, Mode=OneWay}" />

                                                <TextBlock x:Uid="FontPropCount" Grid.Row="3" />
                                                <TextBlock
                                                    Grid.Row="3"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind ViewModel.SelectedVariant.FontFace.GlyphCount, Mode=OneWay}" />

                                                <TextBlock x:Uid="FontPropType" Grid.Row="4" />
                                                <TextBlock
                                                    Grid.Row="4"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.FontFace.FileFormatType}" />

                                                <TextBlock x:Uid="FontPropSymbol" Grid.Row="5" />
                                                <TextBlock
                                                    Grid.Row="5"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.FontFace.IsSymbolFont}" />

                                                <TextBlock x:Uid="FontPropMonospaced" Grid.Row="6" />
                                                <TextBlock
                                                    Grid.Row="6"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.FontFace.IsMonospaced}" />

                                                <TextBlock x:Uid="FontPropStyle" Grid.Row="7" />
                                                <TextBlock
                                                    Grid.Row="7"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.FontFace.Style}" />

                                                <TextBlock x:Uid="FontPropStretch" Grid.Row="8" />
                                                <TextBlock
                                                    Grid.Row="8"
                                                    Style="{StaticResource Value}"
                                                    Text="{Binding SelectedVariant.FontFace.Stretch}" />

                                                <TextBlock x:Uid="FontPropWeight" Grid.Row="9" />
                                                <TextBlock
                                                    Grid.Row="9"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind core:Converters.GetWeightName(ViewModel.SelectedVariant.FontFace.Weight), Mode=OneWay}" />

                                                <TextBlock x:Uid="FontPropInstallType" Grid.Row="10" />
                                                <TextBlock
                                                    Grid.Row="10"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind ViewModel.SelectedVariant.GetProviderName(), Mode=OneWay}" />

                                                <TextBlock x:Uid="FontPropFileSize" Grid.Row="11" />
                                                <TextBlock
                                                    Grid.Row="11"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind core:Converters.GetFileSize(ViewModel.SelectedVariantAnalysis.FileSize), Mode=OneWay}" />

                                                <TextBlock
                                                    x:Name="FontPropXaml"
                                                    x:Uid="FontPropXaml"
                                                    Grid.Row="12"
                                                    Padding="0,4,0,0"
                                                    Visibility="{x:Bind ViewModel.SelectedVariant.IsImported, Mode=OneWay, FallbackValue=Collapsed}" />
                                                <TextBlock
                                                    Grid.Row="13"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,-4,0,0"
                                                    IsTextSelectionEnabled="True"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind ViewModel.XamlPath, Mode=OneWay}"
                                                    Visibility="{x:Bind ViewModel.SelectedVariant.IsImported, Mode=OneWay, FallbackValue=Collapsed}" />

                                                <TextBlock
                                                    x:Uid="FontPropFilePath"
                                                    Grid.Row="12"
                                                    Visibility="{x:Bind ShowFilePath(ViewModel.SelectedVariantAnalysis.FilePath, ViewModel.SelectedVariant.IsImported), Mode=OneWay, FallbackValue=Collapsed}" />
                                                <TextBlock
                                                    Grid.Row="13"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,-4,0,0"
                                                    IsTextSelectionEnabled="True"
                                                    Style="{StaticResource Value}"
                                                    Text="{x:Bind ViewModel.SelectedVariantAnalysis.FilePath, Mode=OneWay}"
                                                    Visibility="{x:Bind ShowFilePath(ViewModel.SelectedVariantAnalysis.FilePath, ViewModel.SelectedVariant.IsImported), Mode=OneWay, FallbackValue=Collapsed}" />

                                            </Grid>

                                            <ItemsControl ItemsSource="{Binding SelectedVariant.FontInformation}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Spacing="12" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Spacing="4">
                                                            <TextBlock Opacity="0.5" Text="{Binding Key}" />
                                                            <TextBlock
                                                                IsTextSelectionEnabled="True"
                                                                Style="{StaticResource Value}"
                                                                Text="{Binding Value}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <Button
                                x:Uid="FontOptionsButton"
                                Height="44"
                                VerticalAlignment="Bottom"
                                IsEnabled="{Binding HasFontOptions}"
                                Style="{ThemeResource TransparentHintButton}">
                                <FontIcon
                                    Margin="0,0,-2,0"
                                    Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                                    Glyph="&#xE890;" />
                                <Button.Flyout>
                                    <Flyout Placement="Bottom">
                                        <ListView
                                            Width="300"
                                            Padding="0"
                                            ItemsSource="{x:Bind ViewModel.SelectedVariant.XamlTypographyFeatures, Mode=OneWay}"
                                            SelectedItem="{Binding SelectedTypography, Mode=TwoWay}"
                                            SelectionMode="Single"
                                            ShowsScrollingPlaceholders="False"
                                            SingleSelectionFollowsFocus="True">
                                            <ListView.ItemContainerTransitions>
                                                <TransitionCollection />
                                            </ListView.ItemContainerTransitions>
                                            <ListView.Header>
                                                <StackPanel Margin="12,4" Spacing="12">
                                                    <TextBlock
                                                        x:Name="ColorHeader"
                                                        x:Uid="FontDisplayHeader"
                                                        x:Load="{x:Bind ViewModel.SelectedVariantAnalysis.ContainsVectorColorGlyphs, Mode=OneWay}"
                                                        FontWeight="Bold"
                                                        Opacity="0.5" />
                                                    <ToggleSwitch
                                                        x:Name="ColorGlyphToggle"
                                                        x:Uid="ColorGlyphToggle"
                                                        x:Load="{x:Bind ViewModel.SelectedVariantAnalysis.ContainsVectorColorGlyphs, Mode=OneWay}"
                                                        VerticalAlignment="Bottom"
                                                        IsOn="{Binding ShowColorGlyphs, Mode=TwoWay}" />
                                                    <TextBlock
                                                        x:Uid="TypographyVariantsHeader"
                                                        Margin="0,12,0,0"
                                                        FontWeight="Bold"
                                                        Opacity="0.5"
                                                        Visibility="{x:Bind ViewModel.SelectedVariant.HasXamlTypographyFeatures, Mode=OneWay}" />
                                                </StackPanel>
                                            </ListView.Header>
                                            <ListView.ItemTemplate>
                                                <DataTemplate x:DataType="core:TypographyFeatureInfo">
                                                    <TextBlock Text="{x:Bind DisplayName}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                        </toolkit:WrapPanel>

                        <Button
                            x:Name="MoreOptionsButton"
                            x:Uid="BtnMoreIcon"
                            x:Load="{x:Bind core:Converters.False(ViewModel.IsExternalFile)}"
                            Grid.Column="1"
                            Width="44"
                            Height="44"
                            VerticalAlignment="Bottom"
                            DataContext="{x:Bind ViewModel.SelectedFont, Mode=OneWay}"
                            Style="{ThemeResource TransparentButton}">
                            <Button.Flyout>
                                <MenuFlyout Opening="MenuFlyout_Opening" Placement="BottomEdgeAlignedRight">
                                    <MenuFlyout.MenuFlyoutPresenterStyle>
                                        <Style TargetType="MenuFlyoutPresenter">
                                            <Setter Property="FontSize" Value="16" />
                                        </Style>
                                    </MenuFlyout.MenuFlyoutPresenterStyle>
                                </MenuFlyout>
                            </Button.Flyout>
                            <FontIcon
                                Margin="0,0,-2,0"
                                Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                                Glyph="&#xE10C;" />
                        </Button>

                    </Grid>

                    <controls:CharacterGridView
                        x:Name="CharGrid"
                        x:FieldModifier="public"
                        Grid.Row="1"
                        Grid.Column="0"
                        Padding="10 10 6 10"
                        EnableResizeAnimation="{x:Bind ViewModel.Settings.AllowExpensiveAnimations, Mode=OneTime}"
                        IsItemClickEnabled="False"
                        ItemAnnotation="{x:Bind ViewModel.Settings.GlyphAnnotation, Mode=OneTime}"
                        ItemFontFace="{x:Bind ViewModel.SelectedVariant.FontFace, Mode=OneWay}"
                        ItemFontFamily="{x:Bind ViewModel.FontFamily, Mode=OneWay}"
                        ItemTypography="{x:Bind ViewModel.SelectedTypography, Mode=OneWay}"
                        ItemsSource="{Binding Chars, Mode=OneWay}"
                        SelectedItem="{Binding SelectedChar, Mode=TwoWay}"
                        SelectionMode="Single"
                        ShowColorGlyphs="{x:Bind ViewModel.ShowColorGlyphs, Mode=OneWay}"
                        ShowsScrollingPlaceholders="False">
                        <GridView.ItemContainerTransitions>
                            <TransitionCollection />
                        </GridView.ItemContainerTransitions>
                        <GridView.ItemTemplate>
                            <DataTemplate>
                                <!--  For performance reasons, all bindings are done in C#  -->
                                <Grid Padding="4">
                                    <TextBlock
                                        Margin="0 -2 0 0"
                                        Padding="0,0,0,8"
                                        IsTextScaleFactorEnabled="False"
                                        TextAlignment="Center" />
                                    <TextBlock Style="{StaticResource CharItemUnicodeStyle}" />
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </controls:CharacterGridView>
                </Grid>

                <!--  Column Grid Splitter  -->
                <Grid
                    x:Name="SplitterContainer"
                    x:FieldModifier="public"
                    Grid.RowSpan="2"
                    Grid.Column="1">
                    <toolkit:GridSplitter
                        x:Name="Splitter"
                        Width="10"
                        Background="Transparent"
                        CursorBehavior="ChangeOnSplitterHover"
                        GripperCursor="SizeWestEast"
                        GripperForeground="Transparent"
                        Loading="GridSplitter_Loading"
                        ParentLevel="1"
                        ResizeBehavior="BasedOnAlignment"
                        ResizeDirection="Columns" />

                    <FontIcon
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Margin="-5,0,0,0"
                        VerticalAlignment="Center"
                        Glyph="&#xE784;"
                        IsHitTestVisible="False" />
                </Grid>

                <!--  Preview Column  -->
                <Grid
                    x:Name="PreviewGrid"
                    x:FieldModifier="public"
                    Grid.RowSpan="2"
                    Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  Character Preview  -->
                    <Grid>
                        <Viewbox
                            Margin="24 12 24 4"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            IsHitTestVisible="False"
                            Stretch="Uniform"
                            StretchDirection="Both">
                            <TextBlock
                                x:Name="TxtPreview"
                                VerticalAlignment="Center"
                                FontFamily="{Binding FontFamily}"
                                FontSize="{x:Bind core:Converters.GetFontSize(ViewModel.Settings.GridSize), Mode=OneTime}"
                                FontStretch="{Binding SelectedVariant.FontFace.Stretch}"
                                FontStyle="{Binding SelectedVariant.FontFace.Style}"
                                FontWeight="{Binding SelectedVariant.FontFace.Weight}"
                                Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                IsColorFontEnabled="{Binding ShowColorGlyphs}"
                                IsTextScaleFactorEnabled="False"
                                Text="{Binding SelectedChar.Char}"
                                TextAlignment="Center" />
                        </Viewbox>

                        <AppBarButton
                            x:Name="BtnFit"
                            Width="50"
                            Height="50"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Click="BtnFit_Click">
                            <Grid>
                                <FontIcon
                                    x:Name="ZoomGlyph"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="16"
                                    Glyph="&#xE73F;"
                                    Loaded="{x:Bind helpers:Composition.SetStandardFadeInOut}"
                                    Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.Settings.FitCharacter), Mode=OneTime}" />
                                <FontIcon
                                    x:Name="ZoomOutGlyph"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="16"
                                    Glyph="&#xE740;"
                                    Loaded="{x:Bind helpers:Composition.SetStandardFadeInOut}"
                                    Visibility="{x:Bind ViewModel.Settings.FitCharacter, Mode=OneTime}" />
                            </Grid>
                        </AppBarButton>

                        <Border
                            x:Name="BorderCopiedMessage"
                            x:Load="False"
                            Grid.Row="0"
                            Margin="15"
                            Padding="12"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon
                                    FontSize="21"
                                    Foreground="White"
                                    Glyph="&#xEC61;" />
                                <TextBlock
                                    x:Name="TxtCopiedMessage"
                                    x:Uid="TxtCopiedMessage"
                                    Margin="8,0,0,0"
                                    Foreground="White"
                                    Text="#TxtCopiedMessage" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <!--  Character Actions Panel  -->
                    <StackPanel Grid.Row="1" Loaded="DetailsGrid_Loaded">

                        <Rectangle
                            Height="1"
                            Margin="0 0 0 1"
                            HorizontalAlignment="Stretch"
                            Fill="{ThemeResource ApplicationForegroundThemeBrush}"
                            Opacity="0.15" />

                        <!--  Copy Button  -->
                        <Button
                            Grid.Row="1"
                            Height="54"
                            Padding="0 4 0 5"
                            BorderThickness="1"
                            Click="{x:Bind TryCopyInternal}"
                            Style="{ThemeResource TransparentButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <FontIcon Foreground="{ThemeResource SystemControlForegroundAccentBrush}" Glyph="&#xE16F;" />
                                <TextBlock
                                    x:Uid="BtnCopy"
                                    Grid.Column="1"
                                    Margin="0,0,5,0"
                                    Text="#BtnCopy"
                                    TextTrimming="CharacterEllipsis" />
                            </Grid>
                        </Button>

                        <!--  Save As Button  -->
                        <Button
                            Grid.Row="2"
                            Height="54"
                            Padding="0 4 0 5"
                            BorderThickness="1"
                            Style="{StaticResource TransparentButton}">
                            <Button.Resources />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>

                                <FontIcon Foreground="{ThemeResource SystemControlForegroundAccentBrush}" Glyph="&#xEB9F;" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="0,0,5,0"
                                    VerticalAlignment="Center"
                                    Text="Save As"
                                    TextTrimming="CharacterEllipsis" />
                                <!--<FontIcon
                                    Grid.Column="2"
                                    FontSize="13"
                                    Glyph="" />-->
                            </Grid>
                            <Button.Flyout>
                                <MenuFlyout x:Name="SaveAsFlyout" Opened="SaveAsFlyout_Opened" Opening="MenuFlyout_Opening_1" Placement="Top">
                                    <MenuFlyoutItem Style="{StaticResource MenuFlyoutItemReadOnlyHeaderStyle}" Text="PNG" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSavePng}"
                                        CommandParameter="{x:Bind ViewModel.GlyphColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="Colored Glyph"
                                        Visibility="{x:Bind ViewModel.SelectedCharAnalysis.HasColorGlyphs, Mode=OneWay}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSavePng}"
                                        CommandParameter="{x:Bind ViewModel.BlackColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="Black"
                                        Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.SelectedCharAnalysis.ContainsBitmapGlyphs), Mode=OneWay, FallbackValue=Collapsed}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSavePng}"
                                        CommandParameter="{x:Bind ViewModel.WhiteColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="White"
                                        Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.SelectedCharAnalysis.ContainsBitmapGlyphs), Mode=OneWay, FallbackValue=Collapsed}" />

                                    <!--<MenuFlyoutSubItem Style="{StaticResource Mfsi}" Text="PNG Image"></MenuFlyoutSubItem>-->

                                    <MenuFlyoutItem
                                        Style="{StaticResource MenuFlyoutItemReadOnlyHeaderStyle}"
                                        Text="SVG"
                                        Visibility="{x:Bind ViewModel.SelectedCharAnalysis.IsFullVectorBased, Mode=OneWay}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSaveSvg}"
                                        CommandParameter="{x:Bind ViewModel.GlyphColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="SVG Glyph"
                                        Visibility="{x:Bind ViewModel.IsSvgChar, Mode=OneWay}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSaveSvg}"
                                        CommandParameter="{x:Bind ViewModel.GlyphColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="Colored Glyph"
                                        Visibility="{x:Bind core:Converters.TrueAndTrueAndFalseToVis(ViewModel.SelectedCharAnalysis.HasColorGlyphs, ViewModel.SelectedCharAnalysis.IsFullVectorBased, ViewModel.IsSvgChar), Mode=OneWay}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSaveSvg}"
                                        CommandParameter="{x:Bind ViewModel.BlackColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="Black"
                                        Visibility="{x:Bind core:Converters.TrueAndFalseToVis(ViewModel.SelectedCharAnalysis.IsFullVectorBased, ViewModel.IsSvgChar), Mode=OneWay}" />
                                    <MenuFlyoutItem
                                        Command="{Binding CommandSaveSvg}"
                                        CommandParameter="{x:Bind ViewModel.WhiteColor}"
                                        Style="{StaticResource Mfi}"
                                        Text="White"
                                        Visibility="{x:Bind core:Converters.TrueAndFalseToVis(ViewModel.SelectedCharAnalysis.IsFullVectorBased, ViewModel.IsSvgChar), Mode=OneWay}" />
                                </MenuFlyout>
                            </Button.Flyout>
                        </Button>

                        <!--  Dev Utils  -->
                        <StackPanel Grid.Row="3" Visibility="{x:Bind ViewModel.Settings.ShowDevUtils, Mode=OneWay}">

                            <Rectangle
                                Height="1"
                                HorizontalAlignment="Stretch"
                                Fill="{ThemeResource ApplicationForegroundThemeBrush}"
                                Opacity="0.15" />

                            <Grid
                                Grid.Row="6"
                                ColumnSpacing="8"
                                Height="50"
                                Margin="0,15,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>

                                <TextBox
                                    x:Name="TxtXamlCode"
                                    x:Uid="TxtXamlCode"
                                    GotFocus="OnCopyGotFocus"
                                    Header="#TxtXamlCode"
                                    Style="{StaticResource CopyTextBox}"
                                    Text="{Binding XamlCode}" />
                                <AppBarButton
                                    x:Name="BtnCopyXamlCode"
                                    x:Uid="BtnCopyDev"
                                    Grid.Column="1"
                                    Width="50"
                                    Height="50"
                                    VerticalAlignment="Bottom"
                                    Click="BtnCopyXamlCode_OnClick">
                                    <FontIcon FontSize="16" Glyph="&#xE16F;" />
                                </AppBarButton>
                            </Grid>

                            <Grid
                                Grid.Row="7"
                                ColumnSpacing="8"
                                Height="50">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>

                                <TextBox
                                    x:Name="TxtFontIcon"
                                    x:Uid="TxtFontIcon"
                                    Margin="0 0 0 -8"
                                    GotFocus="OnCopyGotFocus"
                                    Header="#TxtFontIcon"
                                    Style="{StaticResource CopyTextBox}"
                                    Text="{Binding FontIcon}" />

                                <AppBarButton
                                    x:Name="BtnCopyFontIcon"
                                    x:Uid="BtnCopyDev"
                                    Grid.Column="1"
                                    Width="50"
                                    Height="50"
                                    VerticalAlignment="Bottom"
                                    Click="BtnCopyFontIcon_OnClick">
                                    <FontIcon FontSize="16" Glyph="&#xE16F;" />
                                </AppBarButton>
                            </Grid>

                            <Grid
                                Grid.Row="8"
                                ColumnSpacing="8"
                                Height="50">

                                <Grid x:Name="XAMLGeometryDefaultRoot" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Margin="0 0 0 0">
                                        <TextBlock
                                            x:Uid="TxtPathGeometry"
                                            Margin="14 0 0 0"
                                            FontSize="12"
                                            Foreground="{ThemeResource TextControlHeaderForeground}"
                                            Opacity="0.5" />

                                        <!--
                                            XAML Path Geometry can easily be too long to display in
                                            a normal TextBlock and will cause it to fail to render.
                                            So we switch to Flyout if needed.
                                        -->

                                        <TextBox
                                            x:Name="GeometryTextbox"
                                            x:Load="{x:Bind core:Converters.False(ViewModel.IsLongGeometry), Mode=OneWay}"
                                            Margin="0 -8 0 0"
                                            GotFocus="OnCopyGotFocus"
                                            Style="{StaticResource CopyTextBox}"
                                            Text="{Binding XamlPathGeom}" />

                                        <Button
                                            x:Name="BtnXAMLGeometry"
                                            x:Uid="BtnXAMLGeometry"
                                            x:Load="{x:Bind ViewModel.IsLongGeometry, Mode=OneWay}"
                                            Margin="6 0 0 0"
                                            FontSize="13.333"
                                            Style="{StaticResource TextBlockButtonStyle}">
                                            <Button.Flyout>
                                                <Flyout x:Name="GeometryFlyout" ScrollViewer.VerticalScrollMode="Disabled">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>

                                                        <TextBlock x:Uid="TxtPathGeometry" VerticalAlignment="Center" />

                                                        <AppBarButton
                                                            x:Uid="BtnCopyDev"
                                                            Grid.Column="1"
                                                            Width="50"
                                                            Height="50"
                                                            VerticalAlignment="Bottom"
                                                            Click="BtnCopyXamlPath_OnClick">
                                                            <FontIcon FontSize="16" Glyph="&#xE16F;" />
                                                        </AppBarButton>

                                                        <TextBox
                                                            Grid.Row="1"
                                                            Grid.ColumnSpan="2"
                                                            Width="400"
                                                            MaxHeight="400"
                                                            FontFamily="Consolas"
                                                            IsReadOnly="True"
                                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                            Text="{x:Bind ViewModel.XamlPathGeom, Mode=OneWay}"
                                                            TextWrapping="Wrap" />

                                                    </Grid>
                                                </Flyout>
                                            </Button.Flyout>
                                        </Button>

                                    </StackPanel>


                                    <AppBarButton
                                        x:Uid="BtnCopyDev"
                                        Grid.Column="1"
                                        Width="50"
                                        Height="50"
                                        VerticalAlignment="Bottom"
                                        Click="BtnCopyXamlPath_OnClick">
                                        <FontIcon FontSize="16" Glyph="&#xE16F;" />
                                    </AppBarButton>

                                </Grid>
                            </Grid>

                            <Border x:Name="SymbolIconContainer" Grid.Row="9">
                                <Grid
                                    x:Name="SymbolIconGrid"
                                    x:Load="{x:Bind core:Converters.IsNotNull(ViewModel.SymbolIcon), Mode=OneWay, FallbackValue=False}"
                                    ColumnSpacing="8"
                                    Height="50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox
                                        x:Name="TxtSymbolIcon"
                                        x:Uid="TxtSymbolIcon"
                                        GotFocus="OnCopyGotFocus"
                                        Header="#TxtSymbolIcon"
                                        Style="{StaticResource CopyTextBox}"
                                        Text="{Binding SymbolIcon}" />
                                    <AppBarButton
                                        x:Name="BtnCopySymbolIcon"
                                        x:Uid="BtnCopyDev"
                                        Grid.Column="1"
                                        Width="50"
                                        Height="50"
                                        VerticalAlignment="Bottom"
                                        Click="BtnCopySymbolIcon_OnClick">
                                        <FontIcon FontSize="16" Glyph="&#xE16F;" />
                                    </AppBarButton>
                                </Grid>

                            </Border>

                        </StackPanel>

                    </StackPanel>

                </Grid>
            </Grid>
        </Grid>

        <!--  Notification Presenter  -->
        <Grid
            x:Name="NotificationRoot"
            x:Load="False"
            Grid.RowSpan="3"
            Grid.ColumnSpan="10">
            <toolkit:InAppNotification x:Name="DefaultNotification" />
        </Grid>

        <!--  Standalone Loading Root  -->
        <ProgressRing
            x:Name="LoadingRing"
            Grid.Row="2"
            Grid.ColumnSpan="2"
            Width="50"
            Height="50" />

        <!--  Status Bar  -->
        <Grid
            x:Name="StatusBar"
            Grid.Row="3"
            Height="{StaticResource StatusBarHeight}"
            Background="{StaticResource StatusBarBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <Style BasedOn="{StaticResource StatusBarTextStyle}" TargetType="TextBlock" />
            </Grid.Resources>

            <ContentPresenter Content="{x:Bind StatusBarLeftContent, Mode=OneWay}" />

            <TextBlock
                Grid.Column="1"
                Margin="12,0"
                Text="{x:Bind UpdateStatusBarLabel(ViewModel.SelectedVariant), Mode=OneWay}" />

            <TextBlock
                Grid.Column="2"
                Loaded="{x:Bind helpers:Composition.SetStandardReposition}"
                Text="{x:Bind ViewModel.GetCharDescription(ViewModel.SelectedChar), Mode=OneWay}" />

        </Grid>

        <Rectangle
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Height="{StaticResource StatusBarHeight}"
            VerticalAlignment="Bottom"
            Canvas.ZIndex="-1"
            Fill="{x:Bind StatusBar.Background, Mode=OneWay}" />

        <!--  Print Preview Container  -->
        <Border
            x:Name="PrintPresenter"
            x:DeferLoadStrategy="Lazy"
            Grid.RowSpan="10"
            Grid.ColumnSpan="10"
            Canvas.ZIndex="100" />

        <!--  Off-screen printer render container  -->
        <Canvas x:Name="PrintCanvas" Margin="-10000, -10000, 0, 0" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LoadingStates">
                <VisualState x:Name="FontsLoadingState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainUIGrid.Opacity" Value="0" />
                        <Setter Target="MainUIGrid.IsHitTestVisible" Value="False" />
                        <Setter Target="LoadingRing.IsActive" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FontsLoadedState" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="FontStateGroup">
                <VisualState x:Name="NoFontState">
                    <VisualState.Setters>
                        <Setter Target="MainUIGrid.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HasFontState" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="SearchStatesGroup">
                <VisualState x:Name="InstantSearchState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.Settings.UseInstantSearch, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchBox.QueryIcon" Value="{x:Null}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ManualSearchState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind core:Converters.False(ViewModel.Settings.UseInstantSearch), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</views:ViewBase>
