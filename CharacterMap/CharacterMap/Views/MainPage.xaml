<views:ViewBase
    x:Class="CharacterMap.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CharacterMap.Controls"
    xmlns:core="using:CharacterMap.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:CharacterMap.Helpers"
    xmlns:m="using:CharacterMap.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:views="using:CharacterMap.Views"
    xmlns:vm="using:CharacterMap.ViewModels"
    xmlns:wct="using:Microsoft.Toolkit.Uwp.UI.Controls"
    x:Name="PageRoot"
    Background="{ThemeResource DefaultPageBackgroundBrush}"
    DataContext="{x:Bind ViewModel}"
    mc:Ignorable="d">

    <Control.Resources>
        <!--  Ensure both of these are equal  -->
        <x:Double x:Key="SplitViewPaneWidth">256</x:Double>
        <GridLength x:Key="PaneGridWidth">256</GridLength>

        <CollectionViewSource
            x:Key="GroupedFontList"
            x:Name="GroupedFontList"
            IsSourceGrouped="True"
            Source="{Binding GroupedFontList}" />

        <MenuFlyout
            x:Name="FontListFlyout"
            MenuFlyoutPresenterStyle="{StaticResource DefaultFlyoutStyle}"
            Placement="Bottom" />

        <MenuFlyout
            x:Name="OpenFontFlyout"
            MenuFlyoutPresenterStyle="{StaticResource DefaultFlyoutStyle}"
            Placement="BottomEdgeAlignedLeft">
            <MenuFlyoutItem
                x:Uid="FontFileMenuItem"
                Click="{x:Bind OpenFont}"
                d:Text="Font File">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="O" Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Uid="FontFolderMenuItem"
                Click="{x:Bind OpenFolder}"
                d:Text="Font Folder">
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="O" Modifiers="Control,Shift" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
        </MenuFlyout>

    </Control.Resources>

    <Grid
        x:Name="LayoutRoot"
        AllowDrop="True"
        DragOver="Grid_DragOver"
        Drop="Grid_Drop"
        KeyDown="LayoutRoot_KeyDown">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource PaneGridWidth}" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Title Bar Grid  -->
        <ContentPresenter
            x:Name="TitleButtonsPresenter"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            HorizontalContentAlignment="Stretch"
            Canvas.ZIndex="10"
            Foreground="{ThemeResource ButtonForegroundThemeBrush}">
            <Grid
                Height="{x:Bind TitleBar.TemplateSettings.Height, Mode=OneWay}"
                ChildrenTransitions="{StaticResource RepositionTransitions}"
                d:Height="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{x:Bind TitleBar.TemplateSettings.LeftColumnWidth, Mode=OneWay}" d:Width="0" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="{x:Bind TitleBar.TemplateSettings.RightColumnWidth, Mode=OneWay}" d:Width="0" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <ToggleButton
                        x:Name="ToggleFullScreenModeButton"
                        x:Uid="ToggleFullScreenModeButton"
                        Width="45"
                        Background="Transparent"
                        Command="{Binding CommandToggleFullScreen}"
                        Content="&#xE740;"
                        FontSize="14"
                        Foreground="{Binding ElementName=TitleButtonsPresenter, Path=Foreground}"
                        Style="{StaticResource IconToggleButtonStyle}"
                        Tag="&#xE1D8;"
                        ToolTipService.Placement="Right" />

                    <StackPanel x:Name="TitleButtonsPanel" Orientation="Horizontal">
                        <FrameworkElement.RenderTransform>
                            <CompositeTransform />
                        </FrameworkElement.RenderTransform>
                        <Button
                            x:Name="TitleOpenFontButton"
                            Width="45"
                            Height="45"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            CornerRadius="0"
                            Flyout="{StaticResource OpenFontFlyout}"
                            Foreground="{Binding ElementName=TitleButtonsPresenter, Path=Foreground}"
                            Style="{StaticResource TitleBarButtonStyle}"
                            ToolTipService.ToolTip="{core:Localizer Key='OpenFontButton/[using:Windows.UI.Xaml.Controls]ToolTipService/ToolTip'}">
                            <FontIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="14"
                                Glyph="&#xED25;"
                                RenderTransformOrigin="0.5 0.5">
                                <FontIcon.RenderTransform>
                                    <ScaleTransform ScaleX="-1" ScaleY="1" />
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Button>

                        <Button
                            x:Name="TitleCompareFontsButton"
                            Width="45"
                            Height="45"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Click="FontCompareButton_Click"
                            CornerRadius="0"
                            Foreground="{Binding ElementName=TitleButtonsPresenter, Path=Foreground}"
                            Style="{StaticResource TitleBarButtonStyle}"
                            ToolTipService.ToolTip="{core:Localizer Key='CompareFontsTitle/Text'}">
                            <FontIcon
                                Margin="0 -1 0 0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="14"
                                Glyph="&#xE1D3;" />
                        </Button>

                        <Button
                            x:Name="OpenFontPaneButton"
                            x:Uid="MenuToggle"
                            Width="45"
                            Background="Transparent"
                            Click="OpenFontPaneButton_Click"
                            Content="&#xE700;"
                            FontSize="16"
                            Foreground="{Binding ElementName=TitleButtonsPresenter, Path=Foreground}"
                            Style="{StaticResource TitleBarButtonStyle}"
                            Tag="&#xE700;"
                            Visibility="Collapsed" />
                    </StackPanel>

                </StackPanel>

                <controls:UXButton
                    x:Name="ZuneSettingsButton"
                    x:Load="False"
                    Grid.Column="3"
                    HorizontalAlignment="Right"
                    Click="BtnSettings_OnClick"
                    FontSize="9"
                    Foreground="#8A8D90"
                    Style="{StaticResource MapInfoButtonStyle}"
                    Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.IsSecondaryView)}">
                    <TextBlock
                        CharacterSpacing="30"
                        FontWeight="Bold"
                        Text="{core:Localizer Key='SettingsHeader/Text', Casing=Upper}" />
                </controls:UXButton>

                <TextBlock
                    x:Name="ClassicTitleTextLabel"
                    x:Load="False"
                    Grid.Column="2"
                    Margin="8 0 0 0"
                    VerticalAlignment="Center"
                    FontSize="12"
                    FontWeight="Normal"
                    Foreground="{ThemeResource ControlHighlightContrastForegroundBrush}"
                    IsHitTestVisible="False"
                    Style="{StaticResource BaseTextStyle}"
                    Text="Character Map UWP"
                    TextLineBounds="Tight" />

            </Grid>


        </ContentPresenter>

        <controls:XamlTitleBar
            x:Name="TitleBar"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            MinHeight="{StaticResource MinTitleBarHeight}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            AutoUpdateTitle="False"
            Content="{x:Null}"
            IsAutoHeightEnabled="True"
            Tag="{x:Null}" />

        <!--  Main Content  -->
        <SplitView
            x:Name="SplitView"
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Background="{x:Null}"
            DisplayMode="Inline"
            IsPaneOpen="True"
            OpenPaneLength="{StaticResource SplitViewPaneWidth}"
            PaneBackground="{x:Null}">
            <SplitView.Pane>
                <Grid x:Name="PaneRoot">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Rectangle
                        x:Name="PaneTitleBarSpacer"
                        Height="{x:Bind TitleBar.TemplateSettings.Height, Mode=OneWay}"
                        d:Height="32" />


                    <Border
                        x:Name="PaneRootBackground"
                        Grid.RowSpan="5"
                        Background="Transparent"
                        IsHitTestVisible="False" />

                    <Border
                        x:Name="OverlayPaneRootBackground"
                        x:Load="False"
                        Grid.RowSpan="5"
                        Background="{ThemeResource PaneCollapsedBackgroundBrush}"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />

                    <!--<TextBlock
                        Margin="58 0 0 0"
                        VerticalAlignment="Center"
                        FontSize="12"
                        IsHitTestVisible="False"
                        IsTextScaleFactorEnabled="False"
                        OpticalMarginAlignment="TrimSideBearings"
                        Text="Character Map UWP"
                        TextLineBounds="Tight" />-->


                    <!--  Pane Header Commands  -->
                    <Grid
                        x:Name="PaneHeaderGrid"
                        Grid.Row="1"
                        Height="{StaticResource TitleRowHeight}"
                        Margin="0 -1 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <controls:UXButton
                            x:Name="OpenFontButton"
                            x:Uid="OpenFontButton"
                            Grid.Column="0"
                            Width="{StaticResource TitleRowHeight}"
                            Height="Auto"
                            Padding="4"
                            VerticalAlignment="Stretch"
                            Flyout="{StaticResource OpenFontFlyout}"
                            Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                            Style="{StaticResource MapInfoButtonStyle}"
                            Visibility="Collapsed"
                            d:Label="Open">
                            <FontIcon
                                Margin="0 -1 0 0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                Glyph="&#xED25;"
                                RenderTransformOrigin="0.5 0.5">
                                <FontIcon.RenderTransform>
                                    <ScaleTransform ScaleX="-1" ScaleY="1" />
                                </FontIcon.RenderTransform>
                            </FontIcon>

                        </controls:UXButton>

                        <controls:UXButton
                            x:Name="FontListFilter"
                            x:Uid="FontListFilter"
                            Grid.Column="1"
                            MinHeight="26"
                            Padding="12 0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            VerticalContentAlignment="Center"
                            Style="{StaticResource TransparentHintButton}"
                            ToolTipService.Placement="Bottom"
                            Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.IsSecondaryView)}">

                            <StackPanel
                                Margin="0 -4"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <TextBlock
                                    x:Name="GroupLabel"
                                    OpticalMarginAlignment="TrimSideBearings"
                                    Style="{StaticResource FontFilterTitleStyle}"
                                    Text="{x:Bind ViewModel.FilterTitle, Mode=OneWay, Converter={StaticResource FontSelectorTitleConverter}}"
                                    TextLineBounds="Tight"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap" />
                                <Border Opacity="0.5">
                                    <TextBlock
                                        x:Name="InlineLabelCount"
                                        Grid.Row="0"
                                        Margin="0 8 0 0"
                                        OpticalMarginAlignment="TrimSideBearings"
                                        Style="{StaticResource StatusBarTextStyle}"
                                        Text="{x:Bind UpdateFontCountLabel(ViewModel.FontList, InlineLabelCount.IsHitTestVisible), Mode=OneWay}"
                                        TextLineBounds="Tight" />
                                </Border>
                            </StackPanel>

                            <Button.Flyout>
                                <MenuFlyout
                                    MenuFlyoutPresenterStyle="{StaticResource FontListFlyoutStyle}"
                                    Opening="MenuFlyout_Opening"
                                    Placement="BottomEdgeAlignedRight">
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.All}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SerifFonts}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SansSerifFonts}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SymbolFonts}" />
                                    <MenuFlyoutSubItem Text="Supported Scripts">
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptArabic}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptCyrillic}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptGreekAndCoptic}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptHebrew}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptBasicLatin}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptThai}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptCJKUnifiedIdeographs}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.KoreanHangul}" />
                                    </MenuFlyoutSubItem>
                                    <MenuFlyoutSubItem x:Uid="OptionMoreFilters">
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ColorFonts}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.PanoseDecorativeFonts}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.PanoseScriptFonts}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.MonospacedFonts}" />
                                        <MenuFlyoutItem x:Name="VariableOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.VariableFonts}" />
                                        <MenuFlyoutSubItem Text="Emoji">
                                            <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiAll}" />
                                            <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiEmoticons}" />
                                            <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiDingbats}" />
                                            <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiSymbols}" />
                                        </MenuFlyoutSubItem>
                                        <MenuFlyoutSeparator x:Name="FontSourceSeperator" />
                                        <MenuFlyoutItem x:Name="AppxOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.RemoteFonts}" />
                                        <MenuFlyoutItem x:Name="CloudFontsOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.AppXFonts}" />
                                    </MenuFlyoutSubItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ImportedFonts}" />
                                </MenuFlyout>
                            </Button.Flyout>
                        </controls:UXButton>

                        <controls:UXButton
                            x:Name="SecondaryHeader"
                            x:Load="{x:Bind ViewModel.IsSecondaryView}"
                            Grid.Column="1"
                            MinHeight="26"
                            Margin="0,0,0,0"
                            Padding="12 0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="{Binding ElementName=FontListFilter, Path=VerticalAlignment}"
                            HorizontalContentAlignment="Left"
                            VerticalContentAlignment="Center"
                            Click="{x:Bind ViewModel.OpenSourceFolder}"
                            IsHintVisible="False"
                            Style="{StaticResource TransparentHintButton}">

                            <StackPanel
                                Margin="0 -4"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <TextBlock
                                    x:Name="GroupLabel2"
                                    OpticalMarginAlignment="TrimSideBearings"
                                    Style="{StaticResource FontFilterTitleStyle}"
                                    Text="{x:Bind ViewModel.Folder.Source.Name, Mode=OneWay, Converter={StaticResource FontSelectorTitleConverter}}"
                                    TextLineBounds="Tight"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap"
                                    d:Text="All Fonts" />
                                <Border Opacity="0.5">
                                    <TextBlock
                                        x:Name="InlineLabelCount2"
                                        Grid.Row="0"
                                        Margin="{Binding ElementName=InlineLabelCount, Path=Margin}"
                                        FontSize="{Binding ElementName=InlineLabelCount, Path=FontSize}"
                                        FontWeight="{Binding ElementName=InlineLabelCount, Path=FontWeight}"
                                        OpticalMarginAlignment="TrimSideBearings"
                                        Style="{StaticResource StatusBarTextStyle}"
                                        Text="{x:Bind UpdateFontCountLabel(ViewModel.FontList, InlineLabelCount.IsHitTestVisible), Mode=OneWay}"
                                        TextLineBounds="Tight"
                                        Visibility="{Binding ElementName=InlineLabelCount, Path=Visibility}"
                                        d:Text="123 Font Families" />
                                </Border>
                            </StackPanel>
                        </controls:UXButton>

                    </Grid>

                    <!--  Font List Grid  -->
                    <Grid
                        x:Name="FontListGrid"
                        Grid.Row="2"
                        Loading="FontListGrid_Loading">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!--  User Collection Control Panel  -->
                        <Grid
                            x:Name="CollectionControlRow"
                            Grid.Row="0"
                            Height="48"
                            Visibility="{x:Bind core:Converters.IsNotNullToVis(ViewModel.SelectedCollection), Mode=OneWay, FallbackValue=Collapsed}">
                            <Border x:Name="CollectionControlBackground" Background="{ThemeResource DefaultAcrylicBrush}" />
                            <StackPanel
                                x:Name="CollectionControlItems"
                                Padding="0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                Orientation="Horizontal"
                                Spacing="12">
                                <controls:UXButton
                                    x:Uid="RenameCollectionButton"
                                    Height="Auto"
                                    VerticalAlignment="Stretch"
                                    Click="RenameFontCollection_Click"
                                    Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                    Style="{StaticResource MapInfoButtonStyle}"
                                    ToolTipService.Placement="Bottom"
                                    d:Label="Rename">
                                    <FontIcon Glyph="&#xE13E;" />
                                </controls:UXButton>
                                <controls:UXButton
                                    x:Uid="DeleteCollectionButton"
                                    Height="Auto"
                                    VerticalAlignment="Stretch"
                                    Click="DeleteCollection_Click"
                                    Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                    Style="{StaticResource MapInfoButtonStyle}"
                                    ToolTipService.Placement="Bottom"
                                    d:Label="Delete">
                                    <FontIcon Glyph="&#xE107;" />
                                </controls:UXButton>
                                <controls:UXButton
                                    x:Name="CollectionExportButton"
                                    x:Uid="CollectionExportButton"
                                    Height="Auto"
                                    VerticalAlignment="Stretch"
                                    Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                    IsEnabled="{x:Bind core:Converters.TrueTrue(ViewModel.HasFonts, ViewModel.IsCollectionExportEnabled), Mode=OneWay}"
                                    Style="{StaticResource MapInfoButtonStyle}"
                                    d:Label="Export">
                                    <Button.Flyout>
                                        <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultFlyoutStyle}" Placement="Bottom">
                                            <MenuFlyoutItem x:Uid="CollectionExportHeader" Style="{StaticResource MenuFlyoutItemReadOnlyHeaderStyle}" />
                                            <MenuFlyoutItem x:Uid="CollectionExportFolder" Click="{x:Bind ViewModel.ExportAsFolder}" />
                                            <MenuFlyoutItem x:Uid="CollectionExportZip" Click="{x:Bind ViewModel.ExportAsZip}" />
                                        </MenuFlyout>
                                    </Button.Flyout>
                                    <Grid>
                                        <ProgressRing
                                            Width="20"
                                            Height="20"
                                            MinWidth="20"
                                            MinHeight="20"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            IsActive="{x:Bind core:Converters.False(ViewModel.IsCollectionExportEnabled), Mode=OneWay}"
                                            Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.IsCollectionExportEnabled), Mode=OneWay}" />
                                        <Path
                                            Height="16"
                                            Data="F1 M 38.613281 -43.886719 L 47.167969 -52.500000 L 0.000000 -52.500000 L 0.000000 -60.000000 L 47.167969 -60.000000 L 38.613281 -68.613281 L 43.886719 -73.886719 L 61.523438 -56.250000 L 43.886719 -38.613281 Z M 62.167969 -112.500000 L 120.000000 -112.500000 L 120.000000 -22.500000 L 0.000000 -22.500000 L 0.000000 -45.000000 L 7.500000 -45.000000 L 7.500000 -30.000000 L 112.500000 -30.000000 L 112.500000 -75.000000 L 62.167969 -75.000000 L 47.167969 -90.000000 L 7.500000 -90.000000 L 7.500000 -67.500000 L 0.000000 -67.500000 L 0.000000 -97.500000 L 47.167969 -97.500000 Z M 112.500000 -82.500000 L 112.500000 -105.000000 L 65.332031 -105.000000 L 54.023438 -93.750000 L 65.332031 -82.500000 Z "
                                            Fill="{Binding ElementName=CollectionExportButton, Path=Foreground}"
                                            Stretch="Uniform"
                                            Visibility="{x:Bind ViewModel.IsCollectionExportEnabled, Mode=OneWay}" />
                                    </Grid>

                                </controls:UXButton>
                            </StackPanel>
                        </Grid>

                        <!--  Font List Refresh Grid  -->
                        <Grid
                            x:Name="CollectionRefreshRow"
                            Grid.Row="1"
                            Visibility="{x:Bind ViewModel.IsFontSetExpired, Mode=OneWay, FallbackValue=Collapsed}">
                            <Border Background="{StaticResource SystemControlAccentDark1AcrylicElementAccentDark1Brush}" />

                            <Grid
                                ColumnSpacing="12"
                                Margin="12 4 4 4"
                                RequestedTheme="Dark">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    x:Uid="SystemFontsExpiredMessage"
                                    Margin="0 -2 0 0"
                                    VerticalAlignment="Center"
                                    FontSize="13.333"
                                    TextWrapping="Wrap" />

                                <AppBarButton
                                    Grid.Column="1"
                                    Height="50"
                                    VerticalAlignment="Center"
                                    Click="{x:Bind ViewModel.ReloadFontSet}"
                                    Icon="Refresh"
                                    ToolTipService.Placement="Bottom" />

                            </Grid>
                        </Grid>

                        <AutoSuggestBox
                            x:Name="FontListSearchBox"
                            x:Uid="FontListSearchBox"
                            Grid.Row="2"
                            Margin="0 6 0 0"
                            Loaded="{x:Bind helpers:CompositionFactory.SetStandardReposition}"
                            Text="{Binding FontSearch, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            TextBoxStyle="{StaticResource FontAutoSuggestBoxTextBoxStyle}" />

                        <Grid
                            x:Name="FontHelpBlock"
                            x:Load="False"
                            Grid.Row="3"
                            core:Properties.ClipToBounds="True"
                            Loaded="{x:Bind helpers:CompositionFactory.SetStandardReposition}"
                            Opacity="0.7"
                            Visibility="Collapsed">
                            <TextBlock
                                x:Name="ImportFontHelpBlock"
                                x:Uid="ImportFontHelpBlock"
                                Margin="12"
                                FontSize="13"
                                Loading="{x:Bind helpers:CompositionFactory.SetStandardEntrance}"
                                Style="{StaticResource CaptionTextBlockStyle}" />
                            <TextBlock
                                x:Name="SearchFontHelpBlock"
                                x:Uid="SearchFontHelpBlock"
                                Margin="12"
                                FontSize="13"
                                Loading="{x:Bind helpers:CompositionFactory.SetStandardEntrance}"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Visibility="Collapsed" />
                            <TextBlock
                                x:Name="CollectionFontHelpBlock"
                                x:Uid="CollectionFontHelpBlock"
                                Margin="12"
                                FontSize="13"
                                Loading="{x:Bind helpers:CompositionFactory.SetStandardEntrance}"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Visibility="Collapsed" />
                        </Grid>

                        <Border Grid.Row="3" Style="{StaticResource FontListStyle}">
                            <SemanticZoom x:Name="FontsSemanticZoom">
                                <SemanticZoom.ZoomedInView>
                                    <controls:ExtendedListView
                                        x:Name="LstFontFamily"
                                        ContainerContentChanging="LstFontFamily_ContainerContentChanging"
                                        IsItemClickEnabled="False"
                                        IsSwipeEnabled="False"
                                        ItemTemplate="{StaticResource FontListItemTemplate}"
                                        ItemsSource="{Binding Source={StaticResource GroupedFontList}}"
                                        SelectedValuePath="Name"
                                        SelectionChanged="LstFontFamily_SelectionChanged"
                                        SelectionMode="Single"
                                        ShowsScrollingPlaceholders="False">
                                        <ListView.ItemContainerTransitions>
                                            <TransitionCollection />
                                        </ListView.ItemContainerTransitions>

                                        <ListView.GroupStyle>
                                            <GroupStyle
                                                HeaderContainerStyle="{ThemeResource FontListHeaderItem}"
                                                HeaderTemplate="{StaticResource FontListGroupHeaderTemplate}"
                                                HidesIfEmpty="True" />
                                        </ListView.GroupStyle>
                                    </controls:ExtendedListView>
                                </SemanticZoom.ZoomedInView>
                                <SemanticZoom.ZoomedOutView>
                                    <GridView
                                        x:Name="ZoomGridView"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ItemContainerStyle="{StaticResource FontListGridViewItemStyle}"
                                        ItemsSource="{Binding CollectionGroups, Source={StaticResource GroupedFontList}}">
                                        <GridView.ItemTemplate>
                                            <DataTemplate>
                                                <Border Width="64" Height="64">
                                                    <TextBlock
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        FontSize="32"
                                                        FontWeight="Bold"
                                                        Opacity="{Binding Group.Count, Converter={StaticResource ZoomBackgroundConverter}}"
                                                        Text="{Binding Group.Key}" />
                                                </Border>
                                            </DataTemplate>
                                        </GridView.ItemTemplate>
                                    </GridView>
                                </SemanticZoom.ZoomedOutView>
                            </SemanticZoom>
                        </Border>
                    </Grid>

                    <!--  Pane Footer  -->
                    <Grid
                        Grid.Row="3"
                        Height="32"
                        Background="{x:Bind PaneRoot.Background, Mode=OneWay}">
                        <controls:LabelButton
                            x:Name="FontCompareButton"
                            x:Load="False"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Click="FontCompareButton_Click"
                            ToolTipService.ToolTip="{core:Localizer Key='CompareFontsTitle/Text'}"
                            Visibility="Collapsed">
                            <controls:LabelButton.IconContent>
                                <FontIcon
                                    Width="45"
                                    MinHeight="12"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Glyph="&#xE1D3;" />
                            </controls:LabelButton.IconContent>
                            <TextBlock
                                Margin="0 0 12 0"
                                VerticalAlignment="Center"
                                FontSize="13.333"
                                Text="{core:Localizer Key='CompareFontsTitle/Text'}" />
                        </controls:LabelButton>

                        <!--<AppBarButton
                            Grid.Column="1"
                            Width="45"
                            BorderThickness="0">
                        -->
                        <!--<FontIcon
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="&#xE1D3;" />-->
                        <!--
                        </AppBarButton>-->

                        <controls:UXButton
                            x:Name="TitleHidePaneButton"
                            x:Uid="BtnHidePane"
                            Grid.Column="1"
                            Width="45"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Click="TogglePane_Click"
                            Style="{StaticResource DefaultThemeAppBarButtonStyle}">
                            <FontIcon
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="18"
                                Glyph="&#xE127;" />
                        </controls:UXButton>

                        <controls:UXButton
                            x:Name="TitleShowPaneButton"
                            x:Uid="BtnShowPane"
                            Grid.Column="1"
                            Width="45"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Click="TogglePane_Click"
                            Style="{StaticResource DefaultThemeAppBarButtonStyle}"
                            Visibility="Collapsed">
                            <FontIcon
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="18"
                                Glyph="&#xE126;" />
                        </controls:UXButton>

                    </Grid>

                </Grid>
            </SplitView.Pane>

            <!--  FontMap Grid  -->
            <Grid x:Name="SplitViewContentRoot" Loading="Grid_Loading">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2" d:Height="0" />
                    <RowDefinition Height="Auto" d:Height="32" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="CollapsedTabColumn" Width="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="{x:Bind TitleBar.TemplateSettings.RightColumnWidth, Mode=OneWay}" d:Width="150" />
                </Grid.ColumnDefinitions>

                <Rectangle
                    x:Name="NoTabsTitleBarSpacer"
                    x:Load="{x:Bind core:Converters.False(helpers:ResourceHelper.SupportsTabs), FallbackValue=False}"
                    Grid.Row="1"
                    Height="{x:Bind TitleBar.TemplateSettings.Height, Mode=OneWay}"
                    Margin="0 0 0 -8" />

                <muxc:TabView
                    x:Name="FontsTabBar"
                    x:Load="False"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="0"
                    core:Properties.ClipToBounds="True"
                    core:Properties.IsTabOpenAnimationEnabled="True"
                    core:Properties.RequireOpenTab="True"
                    AddTabButtonClick="FontMapContainer_AddTabButtonClick"
                    AllowDropTabs="True"
                    Background="{x:Null}"
                    CanDragTabs="True"
                    Loaded="FontsTabBar_Loaded"
                    SelectedIndex="{x:Bind ViewModel.TabIndex, Mode=TwoWay}"
                    Style="{StaticResource TabViewStyle}"
                    TabCloseRequested="FontMapContainer_TabCloseRequested"
                    TabDroppedOutside="FontsTabBar_TabDroppedOutside"
                    TabItemsSource="{x:Bind ViewModel.Fonts}"
                    Visibility="Collapsed"
                    d:Visibility="Visible">
                    <muxc:TabView.TabItemTemplate>
                        <DataTemplate x:DataType="vm:FontItem" x:DefaultBindMode="OneWay">
                            <muxc:TabViewItem
                                core:Properties.IsCompact="{x:Bind IsCompact}"
                                DoubleTapped="TabViewItem_DoubleTapped"
                                IsDoubleTapEnabled="True"
                                ToolTipService.ToolTip="{x:Bind Tooltip}">
                                <muxc:TabViewItem.Header>
                                    <Grid ColumnSpacing="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <FontIcon
                                            x:Name="CharMapIcon"
                                            x:Load="{x:Bind core:Converters.False(IsTypeRamp)}"
                                            Margin="0 2 0 0"
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            FontSize="12"
                                            Glyph="&#xE154;" />

                                        <FontIcon
                                            x:Name="TypeRampIcon"
                                            x:Load="{x:Bind IsTypeRamp}"
                                            Margin="0 2 0 0"
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            FontSize="11"
                                            Glyph="&#xEA37;" />

                                        <TextBlock
                                            x:Name="Text"
                                            x:Load="{x:Bind core:Converters.False(IsCompact)}"
                                            Grid.Column="1"
                                            Margin="0 0 0 0"
                                            VerticalAlignment="Center"
                                            IsHitTestVisible="False"
                                            IsTextScaleFactorEnabled="False"
                                            TextLineBounds="Tight"
                                            TextTrimming="CharacterEllipsis">
                                            <Run FontFamily="{x:Bind core:Converters.GetPreviewFontSource(Font.DefaultVariant), FallbackValue='Segoe UI', TargetNullValue='Segoe UI'}" Text="{x:Bind Font.Name}" />
                                            <Run />
                                            <Run
                                                FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                                FontSize="11.333"
                                                Foreground="{ThemeResource TextFillColorTertiary}"
                                                Text="{x:Bind SubTitle}" />
                                        </TextBlock>
                                    </Grid>
                                </muxc:TabViewItem.Header>
                            </muxc:TabViewItem>
                        </DataTemplate>
                    </muxc:TabView.TabItemTemplate>
                </muxc:TabView>


                <Border
                    x:Name="TabBorder"
                    x:Load="False"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"
                    Background="{ThemeResource LayerOnMicaBaseAltFillColorDefaultBrush}"
                    BackgroundTransition="{StaticResource RootBackgroundTransition}"
                    BorderBrush="{ThemeResource TabViewSelectedItemBorderBrush}"
                    BorderThickness="1 0 0 0"
                    CornerRadius="8 8 0 0" />

                <views:FontMapView
                    x:Name="FontMap"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"
                    Padding="0 4 0 0"
                    Font="{x:Bind ViewModel.CurrentFont, Mode=OneWay}">
                    <views:FontMapView.TitleRightContent>
                        <Border Visibility="{x:Bind core:Converters.FalseToVis(ViewModel.IsSecondaryView)}">
                            <controls:UXButton
                                x:Name="BtnSettings"
                                Width="45"
                                Height="45"
                                Margin="-6 0 0 0"
                                Click="BtnSettings_OnClick"
                                Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                Label="{core:Localizer Key='SettingsHeader/Text'}"
                                Style="{StaticResource MapInfoButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <TextBlock x:Uid="SettingsHeader" d:Text="Settings" />
                                </ToolTipService.ToolTip>
                                <FontIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Glyph="&#xE115;" />
                            </controls:UXButton>
                        </Border>
                    </views:FontMapView.TitleRightContent>
                </views:FontMapView>

            </Grid>
        </SplitView>

        <!--  Settings  -->
        <views:SettingsView
            x:Name="SettingsView"
            x:Load="False"
            Grid.RowSpan="3"
            Grid.ColumnSpan="10"
            TitleBarHeight="{x:Bind TitleBar.TemplateSettings.GridHeight, Mode=OneWay}"
            Visibility="Collapsed" />

        <!--  Startup Exception Root  -->
        <Grid
            x:Name="StartupFailedRoot"
            x:Load="{x:Bind ViewModel.IsLoadingFontsFailed, Mode=OneWay}"
            Grid.Row="1"
            Grid.ColumnSpan="10">
            <StackPanel
                Margin="40"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Spacing="8">
                <TextBlock
                    x:Uid="StartupFailedHeader"
                    Style="{StaticResource TitleTextBlockStyle}"
                    TextAlignment="Center" />
                <TextBlock
                    x:Uid="StartupFailedMessage"
                    Style="{StaticResource BodyTextBlockStyle}"
                    TextAlignment="Center"
                    TextWrapping="Wrap" />
                <Button
                    x:Uid="StartupFailedButton"
                    MinWidth="200"
                    Margin="0 8 0 0"
                    HorizontalAlignment="Center"
                    Click="{x:Bind ViewModel.ShowStartUpException}" />
            </StackPanel>
        </Grid>

        <!--  Print Presenter  -->
        <Border
            x:Name="PrintPresenter"
            x:DeferLoadStrategy="Lazy"
            Grid.RowSpan="3"
            Grid.ColumnSpan="10"
            d:Visibility="Collapsed" />

        <!--  Notification Presenter  -->
        <Grid
            x:Name="NotificationRoot"
            x:Load="False"
            Grid.Row="1"
            Grid.RowSpan="3"
            Grid.ColumnSpan="10"
            d:Visibility="Collapsed">
            <wct:InAppNotification x:Name="DefaultNotification" />
        </Grid>

        <!--  Loading Root  -->
        <Grid
            x:Name="LoadingRoot"
            x:Load="{x:Bind ViewModel.IsLoadingFonts, Mode=OneWay}"
            Grid.Row="1"
            Grid.RowSpan="20"
            Grid.ColumnSpan="20"
            Background="{Binding Background, ElementName=PageRoot}"
            Loading="LoadingRoot_Loading"
            d:Visibility="Collapsed">

            <StackPanel
                x:Name="LoadingStack"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Spacing="24">
                <muxc:ProgressRing
                    Width="75"
                    Height="75"
                    Background="Transparent"
                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                    IsActive="True" />
                <TextBlock
                    HorizontalAlignment="Center"
                    Style="{StaticResource TitleTextStyle}"
                    Text="{core:Localizer Key=TxtLoadingFonts/Text, Casing={StaticResource TitleCasing}}" />
            </StackPanel>

        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowPrimaryState">
                <VisualState x:Name="SecondaryViewState" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="ViewStates">
                <VisualState x:Name="CompactViewState">
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="False" />
                        <Setter Target="SplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="CollapsedTabColumn.Width" Value="40" />
                        <Setter Target="FontsTabBar.Margin" Value="0 0 -24 0" />
                        <Setter Target="FontCompareButton.Visibility" Value="Visible" />
                        <Setter Target="OpenFontButton.Visibility" Value="Visible" />
                        <Setter Target="TitleOpenFontButton.Visibility" Value="Collapsed" />
                        <Setter Target="ToggleFullScreenModeButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleCompareFontsButton.Visibility" Value="Collapsed" />
                        <Setter Target="OpenFontPaneButton.Visibility" Value="Visible" />
                        <Setter Target="TitleHidePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleShowPaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="OverlayPaneRootBackground.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CollapsedViewState">
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="False" />
                        <Setter Target="SplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="CollapsedTabColumn.Width" Value="40" />
                        <Setter Target="FontsTabBar.Margin" Value="0 0 -12 0" />
                        <Setter Target="FontCompareButton.Visibility" Value="Visible" />
                        <Setter Target="OpenFontButton.Visibility" Value="Visible" />
                        <Setter Target="TitleOpenFontButton.Visibility" Value="Collapsed" />
                        <Setter Target="ToggleFullScreenModeButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleCompareFontsButton.Visibility" Value="Collapsed" />
                        <Setter Target="OpenFontPaneButton.Visibility" Value="Visible" />
                        <Setter Target="TitleHidePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="TitleShowPaneButton.Visibility" Value="Visible" />
                        <Setter Target="OverlayPaneRootBackground.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DefaultViewState">
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="TitleHidePaneButton.Visibility" Value="Visible" />
                        <Setter Target="TitleShowPaneButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LoadingStates">
                <VisualState x:Name="FontsLoadingState">
                    <VisualState.Setters>
                        <Setter Target="SplitView.Opacity" Value="0" />
                        <Setter Target="SplitView.IsEnabled" Value="False" />
                        <Setter Target="TitleButtonsPanel.Visibility" Value="Collapsed" />
                        <Setter Target="TitleHidePaneButton.IsEnabled" Value="False" />
                        <Setter Target="TitleShowPaneButton.IsEnabled" Value="False" />
                        <Setter Target="TitleHidePaneButton.Opacity" Value="0" />
                        <Setter Target="TitleShowPaneButton.Opacity" Value="0" />
                        <Setter Target="TitleBar.(Canvas.ZIndex)" Value="9" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FontsFailedState">
                    <VisualState.Setters>
                        <Setter Target="SplitView.Visibility" Value="Collapsed" />
                        <Setter Target="TitleHidePaneButton.IsEnabled" Value="False" />
                        <Setter Target="TitleShowPaneButton.IsEnabled" Value="False" />
                        <Setter Target="TitleHidePaneButton.Opacity" Value="0" />
                        <Setter Target="TitleShowPaneButton.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FontsLoadedState" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="FontStates">
                <VisualState x:Name="NoFontsState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind core:Converters.False(ViewModel.HasFonts), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FontHelpBlock.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HasFontsState" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="FallbackTextStates">
                <VisualState x:Name="SearchFallbackState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind core:Converters.True(ViewModel.IsSearchResults), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ImportFontHelpBlock.Visibility" Value="Collapsed" />
                        <Setter Target="SearchFontHelpBlock.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CollectionFallbackState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind core:Converters.IsNotNullAndFalse(ViewModel.SelectedCollection, ViewModel.IsSearchResults), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ImportFontHelpBlock.Visibility" Value="Collapsed" />
                        <Setter Target="CollectionFontHelpBlock.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DesignThemeStates">
                <VisualState x:Name="DefaultThemeState">
                    <VisualState.Setters>
                        <Setter Target="PaneRootBackground.Background" Value="{ThemeResource DefaultHostBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FUIThemeState">
                    <VisualState.Setters>
                        <Setter Target="PageRoot.Background" Value="Transparent" />
                        <Setter Target="PageRoot.(muxc:BackdropMaterial.ApplyToRootOrPageBackground)" Value="True" />
                        <Setter Target="PaneRootBackground.Visibility" Value="Visible" />
                        <Setter Target="PaneRootBackground.CornerRadius" Value="0" />
                        <Setter Target="OverlayPaneRootBackground.Background" Value="{ThemeResource SystemChromeMediumColor}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ClassicThemeState">
                    <VisualState.Setters>
                        <Setter Target="TitleButtonsPresenter.(Grid.Row)" Value="0" />
                        <Setter Target="TitleBar.(Grid.Row)" Value="0" />
                        <Setter Target="TitleButtonsPresenter.Foreground" Value="White" />
                        <Setter Target="BtnSettings.Width" Value="Auto" />
                        <Setter Target="BtnSettings.Height" Value="Auto" />
                        <Setter Target="PaneTitleBarSpacer.MaxHeight" Value="0" />
                        <Setter Target="NoTabsTitleBarSpacer.MaxHeight" Value="0" />
                        <Setter Target="FontMap.Margin" Value="0 0 8 0" />
                        <Setter Target="SplitView.Margin" Value="0 0 0 0" />
                        <Setter Target="PaneRoot.Padding" Value="8 0 0 0" />
                        <Setter Target="ClassicTitleTextLabel.Visibility" Value="Visible" />
                        <Setter Target="InlineLabelCount.Visibility" Value="Collapsed" />
                        <Setter Target="PaneRootBackground.Background" Value="{ThemeResource DefaultPageBackgroundBrush}" />
                        <Setter Target="OpenFontButton.VerticalAlignment" Value="Center" />
                        <Setter Target="FontListFilter.VerticalAlignment" Value="Center" />
                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource DefaultPageBackgroundBrush}" />
                        <Setter Target="CollectionControlItems.VerticalAlignment" Value="Center" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ZuneThemeState">
                    <VisualState.Setters>
                        <Setter Target="BtnSettings.Visibility" Value="Collapsed" />
                        <Setter Target="ZuneSettingsButton.IsHitTestVisible" Value="True" />
                        <Setter Target="InlineLabelCount.IsHitTestVisible" Value="False" />
                        <Setter Target="InlineLabelCount.FontSize" Value="11" />
                        <Setter Target="InlineLabelCount.FontWeight" Value="SemiBold" />
                        <Setter Target="LstFontFamily.FontWeight" Value="SemiBold" />
                        <Setter Target="InlineLabelCount.Margin" Value="0 6 0 0" />
                        <Setter Target="PaneRootBackground.Visibility" Value="Collapsed" />
                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource DefaultPageBackgroundBrush}" />
                        <Setter Target="OverlayPaneRootBackground.Background" Value="White" />
                        <!--<Setter Target="FontListFilter.Foreground" Value="Black" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ModalStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="ModalOpenState" To="NoModalOpenState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleButtonsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <BackEase Amplitude="0.3" EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="NoModalOpenState" To="ModalOpenState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleButtonsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-50">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <BackEase Amplitude="0.2" EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NoModalOpenState" />
                <VisualState x:Name="ModalOpenState">
                    <VisualState.Setters>
                        <Setter Target="TitleButtonsPanel.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="TabStates">
                <VisualState x:Name="TabSupportedState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind helpers:ResourceHelper.SupportsTabs}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FontsTabBar.(core:Properties.ClipToBounds)" Value="True" />
                        <Setter Target="FontsTabBar.Visibility" Value="Visible" />
                        <Setter Target="TabBorder.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:ViewBase>