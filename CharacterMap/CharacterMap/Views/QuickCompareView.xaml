<views:ViewBase
    x:Class="CharacterMap.Views.QuickCompareView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CharacterMap.Controls"
    xmlns:core="using:CharacterMap.Core"
    xmlns:cx="using:CharacterMapCX.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:CharacterMap.Helpers"
    xmlns:m="using:CharacterMap.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewmodels="using:CharacterMap.ViewModels"
    xmlns:views="using:CharacterMap.Views"
    x:Name="ViewRoot"
    Background="Transparent"
    TabFocusNavigation="Cycle"
    mc:Ignorable="d"
    d:DesignHeight="720"
    d:DesignWidth="1280">

    <UserControl.Resources>

        <Style x:Key="DraggableItemStyle" TargetType="GridViewItem">
            <Setter Property="Margin" Value="0 0 12 12" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter
                            x:Name="Root"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}"
                            CheckBrush="{ThemeResource GridViewItemCheckBrush}"
                            CheckMode="{ThemeResource GridViewItemCheckMode}"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContextRequested="ItemContextRequested"
                            Control.IsTemplateFocusTarget="True"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            DragBackground="{ThemeResource GridViewItemDragBackground}"
                            DragForeground="{ThemeResource GridViewItemDragForeground}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}"
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                            PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}"
                            PointerOverBackground="Transparent"
                            PointerOverForeground="{TemplateBinding Foreground}"
                            PointerPressed="Button_PointerPressed"
                            PressedBackground="Transparent"
                            ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                            SelectedBackground="Transparent"
                            SelectedForeground="{TemplateBinding Foreground}"
                            SelectedPointerOverBackground="Transparent"
                            SelectedPressedBackground="Transparent"
                            SelectionCheckMarkVisualEnabled="False">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <PointerUpThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <PointerUpThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="Root" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <MenuFlyout x:Name="MainContextFlyout" MenuFlyoutPresenterStyle="{StaticResource FontListFlyoutStyle}">
            <MenuFlyoutItem
                x:Uid="OpenInNewWindow"
                Click="OpenWindow_Click"
                Icon="NewWindow" />
        </MenuFlyout>

        <MenuFlyout
            x:Name="ContextFlyout"
            MenuFlyoutPresenterStyle="{StaticResource FontListFlyoutStyle}"
            Placement="Bottom">
            <MenuFlyoutItem
                x:Uid="RemoveLabel"
                Click="Remove_Clicked"
                Icon="Clear"
                d:Text="Remove" />
            <MenuFlyoutItem
                x:Uid="OpenInNewWindow"
                Click="OpenWindow_Click"
                Icon="NewWindow" />
        </MenuFlyout>

        <muxc:UniformGridLayout
            x:Name="GridLayout"
            ItemsStretch="Fill"
            MinColumnSpacing="12"
            MinItemHeight="250"
            MinItemWidth="400"
            MinRowSpacing="12" />

        <muxc:StackLayout
            x:Name="StackLayout"
            Orientation="Vertical"
            Spacing="24" />

        <ItemsPanelTemplate x:Key="StackingPanelTemplate">
            <ItemsStackPanel CacheLength="1" />
        </ItemsPanelTemplate>

        <Style BasedOn="{StaticResource CompareCardStyle}" TargetType="controls:ContentGroup" />

        <DataTemplate x:Key="GridTemplate" x:DataType="core:InstalledFont">

            <!--  Canvas is required for maximum performance when updating properties  -->
            <controls:ContentGroup Width="400" Height="250">
                <controls:ContentGroup.Text>
                    <TextBlock
                        Canvas.Top="4"
                        Width="400"
                        Foreground="{ThemeResource TextControlPlaceholderForeground}">
                        <Run Text="{x:Bind Name}" />
                        <Run Text="{x:Bind DefaultVariant.PreferredName}" />
                    </TextBlock>
                </controls:ContentGroup.Text>
                <TextBlock
                    x:Phase="1"
                    Canvas.Top="24"
                    Width="400"
                    MaxHeight="226"
                    FontFamily="{x:Bind DefaultVariant.DisplaySource}"
                    FontStretch="{x:Bind DefaultVariant.FontFace.Stretch}"
                    FontStyle="{x:Bind DefaultVariant.FontFace.Style}"
                    FontWeight="{x:Bind DefaultVariant.FontFace.Weight}"
                    IsColorFontEnabled="True"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
            </controls:ContentGroup>
        </DataTemplate>

        <DataTemplate x:Key="StackTemplate" x:DataType="core:InstalledFont">
            <controls:ContentGroup VerticalAlignment="Stretch">
                <controls:ContentGroup.Text>
                    <!--<TextBlock Foreground="{ThemeResource SystemColorControlAccentBrush}">-->
                    <TextBlock Foreground="{ThemeResource SystemAccentColor}">
                        <Run Text="{x:Bind Name}" />
                        <Run Foreground="{ThemeResource TextControlPlaceholderForeground}" Text="{x:Bind Variants.Count}" />
                        <Run Foreground="{ThemeResource TextControlPlaceholderForeground}" Text="face(s)" />
                    </TextBlock>
                </controls:ContentGroup.Text>
                <controls:ContentGroup.SecondaryContent>
                    <TextBlock
                        x:Name="ContentRender"
                        x:Phase="1"
                        Margin="0 0 0 0"
                        FontFamily="{x:Bind DefaultVariant.DisplaySource}"
                        FontStretch="{x:Bind DefaultVariant.FontFace.Stretch}"
                        FontStyle="{x:Bind DefaultVariant.FontFace.Style}"
                        FontWeight="{x:Bind DefaultVariant.FontFace.Weight}"
                        IsColorFontEnabled="True"
                        MaxLines="5"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="Wrap" />
                </controls:ContentGroup.SecondaryContent>
            </controls:ContentGroup>
        </DataTemplate>

        <DataTemplate x:Key="StackTemplateQuick" x:DataType="m:CharacterRenderingOptions">
            <controls:ContentGroup VerticalAlignment="Stretch">
                <controls:ContentGroup.Text>
                    <TextBlock
                        FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                        Text="{x:Bind GetName()}"
                        TextTrimming="CharacterEllipsis"
                        ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" />
                </controls:ContentGroup.Text>
                <controls:ContentGroup.SecondaryContent>
                    <Grid>
                        <cx:DirectText
                            x:Name="NativeRender"
                            x:Load="{x:Bind RequiresNativeRender, FallbackValue=False, TargetNullValue=False}"
                            x:Phase="1"
                            core:Properties.Options="{x:Bind}"
                            IsTextWrappingEnabled="True"
                            Typography="{x:Bind DXTypography}" />
                        <TextBlock
                            x:Name="XAMLRender"
                            x:Load="{x:Bind core:Converters.False(RequiresNativeRender), FallbackValue=False, TargetNullValue=False}"
                            x:Phase="1"
                            core:Properties.Options="{x:Bind}"
                            MaxLines="5"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap" />
                    </Grid>
                </controls:ContentGroup.SecondaryContent>
            </controls:ContentGroup>

        </DataTemplate>

        <Style TargetType="RadioButton">
            <Setter Property="Background" Value="{ThemeResource RadioButtonBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource RadioButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource RadioButtonBorderBrush}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForeground}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Foreground="{TemplateBinding Foreground}"
                                TextWrapping="Wrap" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid x:Name="LayoutRoot">

        <controls:ModalPagePresenter
            x:Name="Presenter"
            Title="{x:Bind ViewModel.Title}"
            CloseButtonVisibility="Collapsed"
            IsWindowRoot="True">
            <controls:ModalPagePresenter.TitleBarContent>
                <Grid>
                    <controls:XamlTitleBar VerticalAlignment="Top" IsDragTarget="False">
                        <Button
                            x:Name="BackButton"
                            Width="45"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            Click="BackButton_Click"
                            CornerRadius="0"
                            Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                            Style="{StaticResource AccentButtonStyle}"
                            Visibility="Collapsed"
                            d:Visibility="Visible">
                            <FontIcon
                                x:Name="BackIcon"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="12"
                                Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                                Glyph="&#xE0A6;" />
                        </Button>
                    </controls:XamlTitleBar>

                </Grid>

            </controls:ModalPagePresenter.TitleBarContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid
                    x:Name="ContentPanel"
                    Grid.Row="2"
                    ColumnSpacing="24"
                    RowSpacing="12"
                    Padding="24 12 24 0"
                    CornerRadius="8 8 0 0">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Spacing="12">
                        <Grid x:Name="TopRow">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button
                                x:Name="FontListFilter"
                                x:Uid="FontListFilter"
                                Margin="0,0,0,0"
                                Padding="0 0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource TextBlockButtonStyle}"
                                ToolTipService.Placement="Bottom">

                                <TextBlock Margin="0 0 12 0">
                                    <Run Text="{x:Bind ViewModel.FilterTitle, Mode=OneWay}" d:Text="All Fonts" />
                                    <Run />
                                    <Run
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="10"
                                        Text="&#xE011;" />
                                </TextBlock>

                                <Button.Flyout>
                                    <controls:FilterFlyout CollectionSelectedCommand="{x:Bind ViewModel.CollectionSelectedCommand}" FilterCommand="{x:Bind ViewModel.FilterCommand}" />
                                </Button.Flyout>
                            </Button>

                            <ComboBox
                                x:Name="InputText"
                                x:Uid="TypeRampInputBox"
                                Grid.Column="1"
                                MinHeight="0"
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0 0 0 1"
                                CornerRadius="0"
                                IsEditable="True"
                                ItemsSource="{x:Bind ViewModel.TextOptions}"
                                SelectedIndex="0"
                                Style="{StaticResource RampComboBoxStyle}"
                                Text="{Binding ViewModel.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        </Grid>
                        <Grid x:Name="SecondRow">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Margin="-8 -2 0 0" Orientation="Horizontal">
                                <RadioButton
                                    x:Uid="LayoutGridToggle"
                                    Click="GridView_Click"
                                    IsChecked="True">
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xF0E2;" />
                                </RadioButton>
                                <RadioButton x:Uid="LayoutListToggle" Click="ListView_Click">
                                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE14C;" />
                                </RadioButton>
                            </StackPanel>

                            <TextBlock
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                IsTextScaleFactorEnabled="False"
                                Text="A">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform Y="-1" />
                                </TextBlock.RenderTransform>
                            </TextBlock>

                            <Slider
                                x:Name="FontSizeSlider"
                                Grid.Column="3"
                                Margin="0 0 4 0"
                                CornerRadius="0"
                                Maximum="64"
                                Minimum="10"
                                ValueChanged="FontSizeSlider_ValueChanged"
                                Value="40" />

                            <TextBlock
                                Grid.Column="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="24"
                                FontWeight="Normal"
                                IsTextScaleFactorEnabled="False"
                                Text="A">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform Y="-2" />
                                </TextBlock.RenderTransform>
                            </TextBlock>


                        </Grid>
                    </StackPanel>

                    <Grid x:Name="FontsRoot" Grid.Row="1">
                        <Border
                            x:Name="ListingViewRoot"
                            Margin="0 0 -24 0"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <CompositeTransform />
                            </Border.RenderTransform>
                            <GridView
                                x:Name="Repeater"
                                Margin="-8 0 0 0"
                                Padding="8 0 0 0"
                                ContainerContentChanging="Repeater_ContainerContentChanging"
                                ItemClick="Repeater_ItemClick"
                                ItemTemplate="{StaticResource StackTemplate}"
                                ItemsSource="{x:Bind ViewModel.ItemsSource, Mode=OneWay}">
                                <GridView.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <AddDeleteThemeTransition />
                                        <ContentThemeTransition />
                                        <ReorderThemeTransition />
                                        <RepositionThemeTransition IsStaggeringEnabled="False" />
                                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                                    </TransitionCollection>
                                </GridView.ItemContainerTransitions>
                                <GridView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsWrapGrid
                                            CacheLength="1"
                                            ItemHeight="262"
                                            ItemWidth="412"
                                            Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </GridView.ItemsPanel>
                                <GridView.ItemContainerStyle>
                                    <Style TargetType="GridViewItem">
                                        <Setter Property="Margin" Value="0 0 12 12" />
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="GridViewItem">
                                                    <Button
                                                        VerticalAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        Click="ItemClick"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        ContextRequested="ItemContextRequested"
                                                        PointerPressed="Button_PointerPressed"
                                                        Style="{StaticResource QuickCompareContainerStyle}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GridView.ItemContainerStyle>
                            </GridView>
                        </Border>

                        <Grid
                            x:Name="DetailsViewRoot"
                            RowSpacing="12"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="Collapsed"
                            d:Visibility="Visible">
                            <Grid.RenderTransform>
                                <CompositeTransform />
                            </Grid.RenderTransform>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid
                                x:Name="DetailsTitleContainer"
                                ColumnSpacing="4"
                                HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  Text is set in code rather than binding to better support connected animation  -->
                                <TextBlock
                                    x:Name="DetailsFontTitle"
                                    Grid.Column="0"
                                    FontSize="24"
                                    FontWeight="Bold"
                                    d:Text="Segoe UI" />
                                <Button
                                    Grid.Column="1"
                                    Padding="8 0"
                                    Click="{x:Bind ViewModel.OpenCurrentFont}"
                                    Content="{core:Localizer Key='OpenFontButton/Label'}"
                                    Foreground="{StaticResource SystemColorControlAccentBrush}"
                                    Style="{StaticResource TextBlockButtonStyle}"
                                    ToolTipService.ToolTip="{core:Localizer Key='OpenInNewWindow/Text'}" />
                            </Grid>

                            <ScrollViewer
                                x:Name="DetailsViewContent"
                                Grid.Row="1"
                                Margin="0 0 -24 0"
                                Padding="0 0 24 0"
                                RenderTransformOrigin="0.5,0.5">
                                <FrameworkElement.RenderTransform>
                                    <CompositeTransform />
                                </FrameworkElement.RenderTransform>
                                <muxc:ItemsRepeater
                                    x:Name="DetailsRepeater"
                                    ElementClearing="DetailsRepeater_ElementClearing"
                                    ElementPrepared="Repeater_ElementPrepared"
                                    ItemsSource="{x:Bind ViewModel.SelectedFont.Variants, Mode=OneWay}"
                                    Layout="{StaticResource GridLayout}"
                                    VerticalCacheLength="0.5">
                                    <muxc:ItemsRepeater.ItemTemplate>
                                        <DataTemplate x:DataType="core:FontVariant">
                                            <controls:ContentGroup>
                                                <controls:ContentGroup.Text>
                                                    <TextBlock
                                                        FontSize="{StaticResource ControlContentThemeFontSize}"
                                                        Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                                        Text="{x:Bind PreferredName}" />
                                                </controls:ContentGroup.Text>
                                                <controls:ContentGroup.SecondaryContent>
                                                    <TextBlock
                                                        x:Name="TargetRender"
                                                        FontFamily="{x:Bind DisplaySource}"
                                                        FontStretch="{x:Bind FontFace.Stretch}"
                                                        FontStyle="{x:Bind FontFace.Style}"
                                                        FontWeight="{x:Bind FontFace.Weight}"
                                                        IsColorFontEnabled="True"
                                                        TextTrimming="CharacterEllipsis"
                                                        TextWrapping="Wrap" />
                                                </controls:ContentGroup.SecondaryContent>
                                            </controls:ContentGroup>
                                        </DataTemplate>
                                    </muxc:ItemsRepeater.ItemTemplate>
                                </muxc:ItemsRepeater>
                            </ScrollViewer>



                        </Grid>
                    </Grid>
                </Grid>
            </Grid>

        </controls:ModalPagePresenter>

        <!--  Notification Presenter  -->
        <Grid x:Name="NotificationRoot" x:Load="False">
            <toolkit:InAppNotification x:Name="DefaultNotification" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ViewStates" CurrentStateChanging="ViewStates_CurrentStateChanging">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="*" To="DetailsState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.3">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.3">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="False" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.25" Value="True" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="*" To="NormalState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Collapsed" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.7">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.7">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="False" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="True" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalState" />
                <VisualState x:Name="DetailsState">
                    <VisualState.Setters>
                        <Setter Target="ListingViewRoot.Visibility" Value="Collapsed" />
                        <Setter Target="DetailsViewRoot.Visibility" Value="Visible" />
                        <Setter Target="BackButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LayoutModeStates">
                <VisualState x:Name="GridLayoutState" />
                <VisualState x:Name="StackLayoutState">
                    <VisualState.Setters>
                        <!--<Setter Target="Repeater.ItemTemplate" Value="{StaticResource StackTemplate}" />-->
                        <Setter Target="Repeater.ItemsPanel" Value="{StaticResource StackingPanelTemplate}" />
                        <Setter Target="DetailsRepeater.Layout" Value="{StaticResource StackLayout}" />
                        <Setter Target="FontSizeSlider.Maximum" Value="128" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CompareStates">
                <VisualState x:Name="QuickCompareState">
                    <VisualState.Setters>
                        <Setter Target="FontListFilter.Visibility" Value="Collapsed" />
                        <Setter Target="Repeater.ItemContainerStyle" Value="{StaticResource DraggableItemStyle}" />
                        <Setter Target="Repeater.ItemTemplate" Value="{StaticResource StackTemplateQuick}" />
                        <Setter Target="Repeater.IsItemClickEnabled" Value="True" />
                        <Setter Target="Repeater.CanDragItems" Value="True" />
                        <Setter Target="Repeater.CanReorderItems" Value="True" />
                        <Setter Target="Repeater.AllowDrop" Value="True" />
                        <Setter Target="Repeater.ReorderMode" Value="Enabled" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FontFolderState">
                    <VisualState.Setters>
                        <Setter Target="FontListFilter.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DesignThemeStates">
                <VisualState x:Name="DefaultThemeState" />
                <VisualState x:Name="FUIThemeState">
                    <VisualState.Setters>
                        <Setter Target="Presenter.Background" Value="Transparent" />
                        <Setter Target="Presenter.(muxc:BackdropMaterial.ApplyToRootOrPageBackground)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ClassicThemeState">
                    <VisualState.Setters>
                        <Setter Target="BackIcon.Foreground" Value="White" />
                        <Setter Target="BackButton.BorderThickness" Value="0" />
                        <Setter Target="Presenter.HeaderVisibility" Value="Collapsed" />
                        <Setter Target="Presenter.Background" Value="{ThemeResource DefaultPageBackgroundBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ZuneThemeState">
                    <VisualState.Setters />
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:ViewBase>
