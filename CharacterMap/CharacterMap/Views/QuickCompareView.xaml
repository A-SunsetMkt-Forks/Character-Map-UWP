<views:ViewBase
    x:Class="CharacterMap.Views.QuickCompareView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CharacterMap.Controls"
    xmlns:core="using:CharacterMap.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:CharacterMap.Helpers"
    xmlns:m="using:CharacterMap.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:viewmodels="using:CharacterMap.ViewModels"
    xmlns:views="using:CharacterMap.Views"
    x:Name="ViewRoot"
    d:DesignHeight="720"
    d:DesignWidth="1280"
    Background="Transparent"
    TabFocusNavigation="Cycle"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="ChromelessButtonStyle" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Opacity" Value="0.5" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <muxc:UniformGridLayout
            x:Name="GridLayout"
            ItemsStretch="Fill"
            MinColumnSpacing="12"
            MinItemHeight="250"
            MinItemWidth="400"
            MinRowSpacing="12" />

        <muxc:StackLayout
            x:Name="StackLayout"
            Orientation="Vertical"
            Spacing="48" />

        <ItemsPanelTemplate x:Key="StackingPanelTemplate">
            <ItemsStackPanel CacheLength="1" />
        </ItemsPanelTemplate>

        <DataTemplate x:Key="GridTemplate" x:DataType="core:InstalledFont">
            <!--  Canvas is required for maximum performance when updating properties  -->
            <Canvas Width="400" Height="250">
                <TextBlock
                    Canvas.Top="4"
                    Width="400"
                    Foreground="{ThemeResource TextControlPlaceholderForeground}">
                    <Run Text="{x:Bind Name}" />
                    <Run Text="{x:Bind DefaultVariant.PreferredName}" />
                </TextBlock>
                <TextBlock
                    Canvas.Top="24"
                    Width="400"
                    MaxHeight="226"
                    FontFamily="{x:Bind DefaultVariant.Source}"
                    FontStretch="{x:Bind DefaultVariant.FontFace.Stretch}"
                    FontStyle="{x:Bind DefaultVariant.FontFace.Style}"
                    FontWeight="{x:Bind DefaultVariant.FontFace.Weight}"
                    IsColorFontEnabled="True"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="StackTemplate" x:DataType="core:InstalledFont">
            <Grid>
                <TextBlock Margin="0 4 0 0" Foreground="{ThemeResource SystemColorControlAccentBrush}">
                    <Run Text="{x:Bind Name}" />
                    <Run Foreground="{ThemeResource TextControlPlaceholderForeground}" Text="{x:Bind Variants.Count}" />
                    <Run Foreground="{ThemeResource TextControlPlaceholderForeground}" Text="face(s)" />
                </TextBlock>
                <TextBlock
                    Margin="0 24 0 0"
                    x:Phase="1"
                    FontFamily="{x:Bind DefaultVariant.Source}"
                    FontStretch="{x:Bind DefaultVariant.FontFace.Stretch}"
                    FontStyle="{x:Bind DefaultVariant.FontFace.Style}"
                    FontWeight="{x:Bind DefaultVariant.FontFace.Weight}"
                    IsColorFontEnabled="True"
                    MaxLines="5"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="StackTemplateQuick" x:DataType="m:CharacterRenderingOptions">
            <Grid>
                <TextBlock Margin="0 4 0 0" Foreground="{ThemeResource TextControlPlaceholderForeground}">
                    <Run Text="{x:Bind Variant.FamilyName}" />
                    <Run Text="{x:Bind Variant.PreferredName}" />
                </TextBlock>
                <TextBlock
                    Margin="0 24 0 0"
                    x:Phase="1"
                    FontFamily="{x:Bind Variant.Source}"
                    FontStretch="{x:Bind Variant.FontFace.Stretch}"
                    FontStyle="{x:Bind Variant.FontFace.Style}"
                    FontWeight="{x:Bind Variant.FontFace.Weight}"
                    IsColorFontEnabled="True"
                    MaxLines="5"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

        <Style TargetType="RadioButton">
            <Setter Property="Background" Value="{ThemeResource RadioButtonBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource RadioButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource RadioButtonBorderBrush}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForeground}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Foreground="{TemplateBinding Foreground}"
                                TextWrapping="Wrap" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>

    <Grid x:Name="LayoutRoot">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:XamlTitleBar x:Name="TitleBar" Canvas.ZIndex="101">
            <StackPanel Orientation="Horizontal">
                <Button
                    x:Name="BackButton"
                    Width="45"
                    VerticalAlignment="Stretch"
                    d:Visibility="Visible"
                    Background="Transparent"
                    Click="BackButton_Click"
                    CornerRadius="0"
                    Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                    Style="{StaticResource AccentButtonStyle}"
                    Visibility="Collapsed">
                    <FontIcon
                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                        FontSize="12"
                        Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                        Glyph="&#xE0A6;" />
                </Button>
            </StackPanel>
        </controls:XamlTitleBar>

        <Border
            x:Name="TitleBackground"
            Grid.RowSpan="2"
            Margin="0 0 0 -10"
            Background="{StaticResource DefaultHostBrush}" />

        <Grid
            x:Name="HeaderGrid"
            Grid.Row="1"
            Height="{StaticResource TitleRowHeight}">
            <TextBlock
                x:Name="CompareFontsTitle"
                x:Uid="CompareFontsTitle"
                Margin="24 0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                d:Text="Compare Fonts"
                FontSize="22"
                FontWeight="Bold"
                OpticalMarginAlignment="TrimSideBearings" />
        </Grid>

        <Grid
            x:Name="ContentPanel"
            Grid.Row="2"
            ColumnSpacing="24"
            RowSpacing="12"
            Padding="24 12 24 0"
            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
            CornerRadius="8 8 0 0">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Spacing="12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="FontListFilter"
                        x:Uid="FontListFilter"
                        Margin="0,0,0,0"
                        Padding="0 0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Style="{StaticResource TextBlockButtonStyle}"
                        ToolTipService.Placement="Bottom">

                        <TextBlock Margin="0 0 12 0">
                            <Run d:Text="All Fonts" Text="{x:Bind ViewModel.FilterTitle, Mode=OneWay}" />
                            <Run />
                            <Run
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="10"
                                Text="&#xE011;" />
                        </TextBlock>

                        <Button.Flyout>
                            <MenuFlyout Opening="MenuFlyout_Opening" Placement="BottomEdgeAlignedLeft">
                                <MenuFlyout.MenuFlyoutPresenterStyle>
                                    <Style TargetType="MenuFlyoutPresenter">
                                        <Setter Property="FontSize" Value="16" />
                                        <Setter Property="CornerRadius" Value="0" />
                                        <Setter Property="Margin" Value="0 -4 0 0" />
                                        <Setter Property="Padding" Value="0" />
                                        <!--<Setter Property="BorderBrush" Value="{ThemeResource SystemAccentColor}" />-->
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Style>
                                </MenuFlyout.MenuFlyoutPresenterStyle>
                                <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.All}" />
                                <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SerifFonts}" />
                                <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SansSerifFonts}" />
                                <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.SymbolFonts}" />
                                <MenuFlyoutSubItem FontSize="16" Text="Supported Scripts">
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptArabic}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptCyrillic}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptGreekAndCoptic}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptHebrew}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptBasicLatin}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptThai}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ScriptCJKUnifiedIdeographs}" />
                                </MenuFlyoutSubItem>
                                <MenuFlyoutSubItem x:Uid="OptionMoreFilters" FontSize="16">
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ColorFonts}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.PanoseDecorativeFonts}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.PanoseScriptFonts}" />
                                    <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.MonospacedFonts}" />
                                    <MenuFlyoutItem x:Name="VariableOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.VariableFonts}" />
                                    <MenuFlyoutSubItem FontSize="16" Text="Emoji">
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiAll}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiEmoticons}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiDingbats}" />
                                        <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.EmojiSymbols}" />
                                    </MenuFlyoutSubItem>
                                    <MenuFlyoutSeparator x:Name="FontSourceSeperator" />
                                    <MenuFlyoutItem x:Name="AppxOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.RemoteFonts}" />
                                    <MenuFlyoutItem x:Name="CloudFontsOption" core:Properties.Filter="{x:Bind m:BasicFontFilter.AppXFonts}" />
                                </MenuFlyoutSubItem>
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem core:Properties.Filter="{x:Bind m:BasicFontFilter.ImportedFonts}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <ComboBox
                        x:Name="InputText"
                        x:Uid="TypeRampInputBox"
                        Grid.Column="1"
                        MinHeight="0"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        BorderThickness="0 0 0 1"
                        CornerRadius="0"
                        IsEditable="True"
                        ItemsSource="{x:Bind ViewModel.TextOptions}"
                        SelectedIndex="0"
                        Style="{StaticResource RampComboBoxStyle}"
                        Text="{Binding ViewModel.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Margin="-8 -2 0 0" Orientation="Horizontal">
                        <RadioButton
                            x:Uid="LayoutGridToggle"
                            Click="GridView_Click"
                            IsChecked="True">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xF0E2;" />
                        </RadioButton>
                        <RadioButton x:Uid="LayoutListToggle" Click="ListView_Click">
                            <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE14C;" />
                        </RadioButton>
                    </StackPanel>

                    <TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        IsTextScaleFactorEnabled="False"
                        Text="A">
                        <TextBlock.RenderTransform>
                            <TranslateTransform Y="-1" />
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <Slider
                        x:Name="FontSizeSlider"
                        Grid.Column="3"
                        Margin="0 0 4 0"
                        CornerRadius="0"
                        Maximum="64"
                        Minimum="10"
                        ValueChanged="FontSizeSlider_ValueChanged"
                        Value="40" />

                    <TextBlock
                        Grid.Column="4"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="24"
                        FontWeight="Normal"
                        IsTextScaleFactorEnabled="False"
                        Text="A">
                        <TextBlock.RenderTransform>
                            <TranslateTransform Y="-2" />
                        </TextBlock.RenderTransform>
                    </TextBlock>


                </Grid>

            </StackPanel>

            <Border
                x:Name="ListingViewRoot"
                Grid.Row="1"
                Margin="0 0 -24 0"
                RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <CompositeTransform />
                </Border.RenderTransform>
                <GridView
                    x:Name="Repeater"
                    Padding="0 0 24 0"
                    ContainerContentChanging="Repeater_ContainerContentChanging"
                    IsItemClickEnabled="True"
                    ItemClick="Repeater_ItemClick"
                    ItemTemplate="{StaticResource StackTemplate}"
                    ItemsSource="{x:Bind ViewModel.ItemsSource, Mode=OneWay}">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid
                                CacheLength="1"
                                ItemHeight="262"
                                ItemWidth="412"
                                Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Margin" Value="0 0 12 12" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GridViewItem">
                                        <ContentPresenter
                                            x:Name="ContentPresenter"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            AutomationProperties.AccessibilityView="Raw"
                                            Background="Transparent"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <VisualState.Setters>
                                                            <Setter Target="ContentPresenter.Opacity" Value="0.5" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </ContentPresenter>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </Border>

            <Grid
                x:Name="DetailsViewRoot"
                Grid.Row="1"
                RowSpacing="12"
                d:Visibility="Visible"
                RenderTransformOrigin="0.5,0.5"
                Visibility="Collapsed">
                <Grid.RenderTransform>
                    <CompositeTransform />
                </Grid.RenderTransform>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid
                    x:Name="DetailsTitleContainer"
                    ColumnSpacing="4"
                    HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Text is set in code rather than binding to better support connected animation  -->
                    <TextBlock
                        x:Name="DetailsFontTitle"
                        Grid.Column="0"
                        d:Text="Segoe UI"
                        FontSize="24"
                        FontWeight="Bold" />
                    <Button
                        Grid.Column="1"
                        Padding="8 0"
                        Click="{x:Bind ViewModel.OpenCurrentFont}"
                        Foreground="{StaticResource SystemColorControlAccentBrush}"
                        Style="{StaticResource ChromelessButtonStyle}"
                        ToolTipService.ToolTip="{core:Localizer Key='OpenInNewWindow/Text'}">
                        <FontIcon
                            Margin="0 2 0 0"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="16"
                            Glyph="&#xE17C;" />
                    </Button>
                </Grid>

                <ScrollViewer
                    x:Name="DetailsViewContent"
                    Grid.Row="1"
                    Margin="0 0 -24 0"
                    Padding="0 0 24 0"
                    RenderTransformOrigin="0.5,0.5">
                    <FrameworkElement.RenderTransform>
                        <CompositeTransform />
                    </FrameworkElement.RenderTransform>
                    <muxc:ItemsRepeater
                        x:Name="DetailsRepeater"
                        ElementPrepared="Repeater_ElementPrepared"
                        ItemsSource="{x:Bind ViewModel.SelectedFont.Variants, Mode=OneWay}"
                        Layout="{StaticResource GridLayout}"
                        VerticalCacheLength="0.5">
                        <muxc:ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="core:FontVariant">
                                <Grid BorderBrush="{ThemeResource SystemColorControlAccentBrush}" BorderThickness="0 0 0 0">
                                    <TextBlock Margin="0 4 0 0" Foreground="{ThemeResource TextControlPlaceholderForeground}">
                                        <Run Text="{x:Bind PreferredName}" />
                                    </TextBlock>
                                    <TextBlock
                                        Margin="0 24 0 0"
                                        FontFamily="{x:Bind Source}"
                                        FontStretch="{x:Bind FontFace.Stretch}"
                                        FontStyle="{x:Bind FontFace.Style}"
                                        FontWeight="{x:Bind FontFace.Weight}"
                                        IsColorFontEnabled="True"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="Wrap" />
                                </Grid>
                            </DataTemplate>
                        </muxc:ItemsRepeater.ItemTemplate>
                    </muxc:ItemsRepeater>
                </ScrollViewer>



            </Grid>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ViewStates" CurrentStateChanging="ViewStates_CurrentStateChanging">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="*" To="DetailsState">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.3">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1.3">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="False" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.25" Value="True" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0.7" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.85" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.13 1" ControlPoint2="0.49 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="*" To="NormalState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Collapsed" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.7">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.7">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsViewContent" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.95,0.05" ControlPoint2="0.79,0.04" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="False" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="True" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1.3" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ListingViewRoot" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="1">
                                    <SplineDoubleKeyFrame.KeySpline>
                                        <KeySpline ControlPoint1="0.19 1" ControlPoint2="0.22 1" />
                                    </SplineDoubleKeyFrame.KeySpline>
                                </SplineDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalState" />
                <VisualState x:Name="DetailsState">
                    <VisualState.Setters>
                        <Setter Target="ListingViewRoot.Visibility" Value="Collapsed" />
                        <Setter Target="DetailsViewRoot.Visibility" Value="Visible" />
                        <Setter Target="BackButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LayoutModeStates">
                <VisualState x:Name="GridLayoutState" />
                <VisualState x:Name="StackLayoutState">
                    <VisualState.Setters>
                        <!--<Setter Target="Repeater.ItemTemplate" Value="{StaticResource StackTemplate}" />-->
                        <Setter Target="Repeater.ItemsPanel" Value="{StaticResource StackingPanelTemplate}" />
                        <Setter Target="DetailsRepeater.Layout" Value="{StaticResource StackLayout}" />
                        <Setter Target="FontSizeSlider.Maximum" Value="128" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CompareStates">
                <VisualState x:Name="QuickCompareState">
                    <VisualState.Setters>
                        <Setter Target="FontListFilter.Visibility" Value="Collapsed" />
                        <Setter Target="CompareFontsTitle.Text" Value="{core:Localizer Key='QuickCompareTitle/Text'}" />
                        <Setter Target="Repeater.ItemTemplate" Value="{StaticResource StackTemplateQuick}" />
                        <Setter Target="Repeater.IsItemClickEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</views:ViewBase>
